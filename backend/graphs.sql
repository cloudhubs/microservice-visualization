
DROP SEQUENCE IF EXISTS `graphs_seq`;
CREATE SEQUENCE `graphs_seq` start with 1 minvalue 1 maxvalue 9223372036854775806 increment by 50 cache 1000 nocycle ENGINE=InnoDB;
SELECT SETVAL(`graphs_seq`, 200001, 0);

--
-- Table structure for table `graphs`
--

DROP TABLE IF EXISTS `graphs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `graphs` (
  `instance_id` bigint(20) NOT NULL,
  `create_date` datetime(6) DEFAULT NULL,
  `graph_name` varchar(255) NOT NULL,
  `links` longtext NOT NULL,
  `modify_date` datetime(6) DEFAULT NULL,
  `nodes` longtext NOT NULL,
  `git_commit_id` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`instance_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `graphs`
--

LOCK TABLES `graphs` WRITE;
/*!40000 ALTER TABLE `graphs` DISABLE KEYS */;
INSERT INTO msgraph.graphs (instance_id, create_date, git_commit_id, graph_name, links, modify_date, nodes) VALUES (1, '2023-05-02 03:12:15.134000', 'b0c4352', 'traintestWithGit', '[{"source":"ts-admin-basic-info-service","target":"ts-train-service","requests":[{"type":"POST","argument":"@RequestBody TrainType trainType, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.create"},{"type":"PUT","argument":"@RequestBody TrainType trainType, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.update"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.query"},{"type":"DELETE","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.delete"}],"name":"ts-admin-basic-info-service --> ts-train-service"},{"source":"ts-travel-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.getLeftTicketOfInterval"}],"name":"ts-travel-service --> ts-seat-service"},{"source":"ts-admin-travel-service","target":"ts-travel2-service","requests":[{"type":"PUT","argument":"@RequestBody TravelInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.updateTrip"},{"type":"POST","argument":"@RequestBody TravelInfo routeIds, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"travel2.controller.Travel2Controller.createTrip"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.adminQueryAll"},{"type":"DELETE","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.deleteTrip"}],"name":"ts-admin-travel-service --> ts-travel2-service"},{"source":"ts-travel-plan-service","target":"ts-travel-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.queryInfo"}],"name":"ts-travel-plan-service --> ts-travel-service"},{"source":"ts-security-service","target":"ts-order-service","requests":[{"type":"GET","argument":"@PathVariable Date checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.securityInfoCheck"}],"name":"ts-security-service --> ts-order-service"},{"source":"ts-admin-user-service","target":"ts-user-service","requests":[{"type":"PUT","argument":"@RequestBody UserDto user, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.updateUser"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getAllUser"},{"type":"DELETE","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.deleteUserById"}],"name":"ts-admin-user-service --> ts-user-service"},{"source":"ts-route-plan-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-route-plan-service --> ts-station-service"},{"source":"ts-preserve-other-service","target":"ts-travel2-service","requests":[{"type":"POST","argument":"@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.getTripAllDetailInfo"}],"name":"ts-preserve-other-service --> ts-travel2-service"},{"source":"ts-basic-service","target":"ts-route-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"}],"name":"ts-basic-service --> ts-route-service"},{"source":"ts-seat-service","target":"ts-travel2-service","requests":[{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.getRouteByTripId"},{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.getTrainTypeByTripId"}],"name":"ts-seat-service --> ts-travel2-service"},{"source":"ts-travel2-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.getLeftTicketOfInterval"}],"name":"ts-travel2-service --> ts-seat-service"},{"source":"ts-seat-service","target":"ts-config-service","requests":[{"type":"GET","argument":"@PathVariable String configName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.retrieve"}],"name":"ts-seat-service --> ts-config-service"},{"source":"ts-admin-order-service","target":"ts-order-other-service","requests":[{"type":"POST","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.addcreateNewOrder"},{"type":"PUT","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.updateOrder"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.findAllOrder"},{"type":"DELETE","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.deleteOrder"}],"name":"ts-admin-order-service --> ts-order-other-service"},{"source":"ts-travel-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"},{"type":"GET","argument":"@PathVariable String name, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForStationId"}],"name":"ts-travel-service --> ts-ticketinfo-service"},{"source":"ts-preserve-other-service","target":"ts-assurance-service","requests":[{"type":"GET","argument":"@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"assurance.controller.AssuranceController.createNewAssurance"}],"name":"ts-preserve-other-service --> ts-assurance-service"},{"source":"ts-travel2-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"},{"type":"GET","argument":"@PathVariable String name, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForStationId"}],"name":"ts-travel2-service --> ts-ticketinfo-service"},{"source":"ts-preserve-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-preserve-service --> ts-station-service"},{"source":"ts-preserve-service","target":"ts-user-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getUserByUserId"}],"name":"ts-preserve-service --> ts-user-service"},{"source":"ts-cancel-service","target":"ts-order-service","requests":[{"type":"PUT","argument":"@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.saveOrderInfo"},{"type":"GET","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.getOrderById"}],"name":"ts-cancel-service --> ts-order-service"},{"source":"ts-cancel-service","target":"ts-inside-payment-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"inside_payment.controller.InsidePaymentController.drawBack"}],"name":"ts-cancel-service --> ts-inside-payment-service"},{"source":"ts-travel-plan-service","target":"ts-route-plan-service","requests":[{"type":"GET","argument":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"plan.controller.RoutePlanController.getCheapestRoutes"},{"type":"GET","argument":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"plan.controller.RoutePlanController.getMinStopStations"},{"type":"GET","argument":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"plan.controller.RoutePlanController.getQuickestRoutes"}],"name":"ts-travel-plan-service --> ts-route-plan-service"},{"source":"ts-travel2-service","target":"ts-order-other-service","requests":[{"type":"GET","argument":"@PathVariable Date travelDate, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.calculateSoldTicket"}],"name":"ts-travel2-service --> ts-order-other-service"},{"source":"ts-preserve-other-service","target":"ts-security-service","requests":[{"type":"GET","argument":"@PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"security.controller.SecurityController.check"}],"name":"ts-preserve-other-service --> ts-security-service"},{"source":"ts-basic-service","target":"ts-train-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.retrieve"}],"name":"ts-basic-service --> ts-train-service"},{"source":"ts-preserve-other-service","target":"ts-contacts-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.getContactsByContactsId"}],"name":"ts-preserve-other-service --> ts-contacts-service"},{"source":"ts-inside-payment-service","target":"ts-order-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.modifyOrder"}],"name":"ts-inside-payment-service --> ts-order-service"},{"source":"ts-route-plan-service","target":"ts-route-service","requests":[{"type":"POST","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"},{"type":"GET","argument":"@PathVariable String startId, @PathVariable String terminalId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryByStartAndTerminal"}],"name":"ts-route-plan-service --> ts-route-service"},{"source":"ts-rebook-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.create"}],"name":"ts-rebook-service --> ts-seat-service"},{"source":"ts-cancel-service","target":"ts-user-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getUserByUserId"}],"name":"ts-cancel-service --> ts-user-service"},{"source":"ts-travel-service","target":"ts-order-service","requests":[{"type":"GET","argument":"@PathVariable Date travelDate, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.calculateSoldTicket"}],"name":"ts-travel-service --> ts-order-service"},{"source":"ts-cancel-service","target":"ts-notification-service","requests":[{"type":"POST","argument":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"notification.controller.NotificationController.order_cancel_success"}],"name":"ts-cancel-service --> ts-notification-service"},{"source":"ts-seat-service","target":"ts-travel-service","requests":[{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getRouteByTripId"},{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getTrainTypeByTripId"}],"name":"ts-seat-service --> ts-travel-service"},{"source":"ts-seat-service","target":"ts-order-other-service","requests":[{"type":"GET","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.getTicketListByDateAndTripId"}],"name":"ts-seat-service --> ts-order-other-service"},{"source":"ts-food-service","target":"ts-travel-service","requests":[{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getRouteByTripId"}],"name":"ts-food-service --> ts-travel-service"},{"source":"ts-preserve-other-service","target":"ts-notification-service","requests":[{"type":"POST","argument":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"notification.controller.NotificationController.preserve_success"}],"name":"ts-preserve-other-service --> ts-notification-service"},{"source":"ts-travel-plan-service","target":"ts-travel2-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.queryInfo"}],"name":"ts-travel-plan-service --> ts-travel2-service"},{"source":"ts-travel2-service","target":"ts-train-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.retrieve"}],"name":"ts-travel2-service --> ts-train-service"},{"source":"ts-user-service","target":"ts-auth-service","requests":[{"type":"POST","argument":"@RequestBody AuthDto authDto","msReturn":"HttpEntity<Response>","endpointFunction":"auth.controller.AuthController.createDefaultUser"}],"name":"ts-user-service --> ts-auth-service"},{"source":"ts-preserve-other-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"}],"name":"ts-preserve-other-service --> ts-ticketinfo-service"},{"source":"ts-preserve-other-service","target":"ts-order-other-service","requests":[{"type":"POST","argument":"@RequestBody Order createOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.createNewOrder"}],"name":"ts-preserve-other-service --> ts-order-other-service"},{"source":"ts-admin-basic-info-service","target":"ts-price-service","requests":[{"type":"POST","argument":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"price.controller.PriceController.create"},{"type":"PUT","argument":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.update"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.queryAll"},{"type":"DELETE","argument":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.delete"}],"name":"ts-admin-basic-info-service --> ts-price-service"},{"source":"ts-ticketinfo-service","target":"ts-basic-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.BasicController.queryForTravel"},{"type":"GET","argument":"@PathVariable String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.BasicController.queryForStationId"}],"name":"ts-ticketinfo-service --> ts-basic-service"},{"source":"ts-preserve-service","target":"ts-travel-service","requests":[{"type":"GET","argument":"@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getTripAllDetailInfo"}],"name":"ts-preserve-service --> ts-travel-service"},{"source":"ts-security-service","target":"ts-order-other-service","requests":[{"type":"GET","argument":"@PathVariable Date checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.securityInfoCheck"}],"name":"ts-security-service --> ts-order-other-service"},{"source":"ts-travel-plan-service","target":"ts-seat-service","requests":[{"type":"GET","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.getLeftTicketOfInterval"}],"name":"ts-travel-plan-service --> ts-seat-service"},{"source":"ts-route-plan-service","target":"ts-travel2-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.queryInfo"},{"type":"GET","argument":"@RequestBody ArrayList<String> routeIds, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.getTripsByRouteId"}],"name":"ts-route-plan-service --> ts-travel2-service"},{"source":"ts-travel-plan-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForNameBatch"}],"name":"ts-travel-plan-service --> ts-station-service"},{"source":"ts-preserve-service","target":"ts-order-service","requests":[{"type":"POST","argument":"@RequestBody Order createOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.createNewOrder"}],"name":"ts-preserve-service --> ts-order-service"},{"source":"ts-admin-route-service","target":"ts-route-service","requests":[{"type":"POST","argument":"@RequestBody RouteInfo createAndModifyRouteInfo, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"route.controller.RouteController.createAndModifyRoute"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryAll"},{"type":"DELETE","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.deleteRoute"}],"name":"ts-admin-route-service --> ts-route-service"},{"source":"ts-admin-basic-info-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody Station station, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"fdse.microservice.controller.StationController.create"},{"type":"PUT","argument":"@RequestBody Station station, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.update"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.query"},{"type":"DELETE","argument":"@RequestBody Station station, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"fdse.microservice.controller.StationController.delete"}],"name":"ts-admin-basic-info-service --> ts-station-service"},{"source":"ts-inside-payment-service","target":"ts-order-other-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.modifyOrder"}],"name":"ts-inside-payment-service --> ts-order-other-service"},{"source":"ts-admin-basic-info-service","target":"ts-contacts-service","requests":[{"type":"POST","argument":"@RequestBody Contacts aci, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"contacts.controller.ContactsController.createNewContactsAdmin"},{"type":"PUT","argument":"@RequestBody Contacts info, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.modifyContacts"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.getAllContacts"},{"type":"DELETE","argument":"@PathVariable String contactsId, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.deleteContacts"}],"name":"ts-admin-basic-info-service --> ts-contacts-service"},{"source":"ts-rebook-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationIdForName#quot;) String stationId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryById"}],"name":"ts-rebook-service --> ts-station-service"},{"source":"ts-order-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForNameBatch"}],"name":"ts-order-service --> ts-station-service"},{"source":"ts-preserve-service","target":"ts-food-service","requests":[{"type":"POST","argument":"@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"foodsearch.controller.FoodController.createFoodOrder"}],"name":"ts-preserve-service --> ts-food-service"},{"source":"ts-preserve-other-service","target":"ts-consign-service","requests":[{"type":"POST","argument":"@RequestBody Consign request, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"consign.controller.ConsignController.insertConsign"}],"name":"ts-preserve-other-service --> ts-consign-service"},{"source":"ts-execute-service","target":"ts-order-other-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.modifyOrder"},{"type":"GET","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.getOrderById"}],"name":"ts-execute-service --> ts-order-other-service"},{"source":"ts-basic-service","target":"ts-price-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @PathVariable String trainType, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.query"}],"name":"ts-basic-service --> ts-price-service"},{"source":"ts-food-service","target":"ts-food-map-service","requests":[{"type":"GET","argument":"@RequestBody List<String> stationIdList","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"food.controller.FoodStoreController.getFoodStoresByStationIds"},{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"food.controller.TrainFoodController.getTrainFoodOfTrip"}],"name":"ts-food-service --> ts-food-map-service"},{"source":"ts-cancel-service","target":"ts-order-other-service","requests":[{"type":"PUT","argument":"@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.saveOrderInfo"},{"type":"GET","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.getOrderById"}],"name":"ts-cancel-service --> ts-order-other-service"},{"source":"ts-preserve-service","target":"ts-notification-service","requests":[{"type":"POST","argument":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"notification.controller.NotificationController.preserve_success"}],"name":"ts-preserve-service --> ts-notification-service"},{"source":"ts-preserve-service","target":"ts-consign-service","requests":[{"type":"POST","argument":"@RequestBody Consign request, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"consign.controller.ConsignController.insertConsign"}],"name":"ts-preserve-service --> ts-consign-service"},{"source":"ts-preserve-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"}],"name":"ts-preserve-service --> ts-ticketinfo-service"},{"source":"ts-rebook-service","target":"ts-inside-payment-service","requests":[{"type":"POST","argument":"@RequestBody PaymentInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"inside_payment.controller.InsidePaymentController.payDifference"},{"type":"GET","argument":"@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"inside_payment.controller.InsidePaymentController.drawBack"}],"name":"ts-rebook-service --> ts-inside-payment-service"},{"source":"ts-travel2-service","target":"ts-route-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"}],"name":"ts-travel2-service --> ts-route-service"},{"source":"ts-admin-travel-service","target":"ts-travel-service","requests":[{"type":"PUT","argument":"@RequestBody TravelInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.updateTrip"},{"type":"POST","argument":"@RequestBody TravelInfo routeIds, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"travel.controller.TravelController.createTrip"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.adminQueryAll"},{"type":"DELETE","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.deleteTrip"}],"name":"ts-admin-travel-service --> ts-travel-service"},{"source":"ts-preserve-other-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.create"}],"name":"ts-preserve-other-service --> ts-seat-service"},{"source":"ts-preserve-other-service","target":"ts-user-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getUserByUserId"}],"name":"ts-preserve-other-service --> ts-user-service"},{"source":"ts-preserve-service","target":"ts-security-service","requests":[{"type":"GET","argument":"@PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"security.controller.SecurityController.check"}],"name":"ts-preserve-service --> ts-security-service"},{"source":"ts-preserve-service","target":"ts-assurance-service","requests":[{"type":"POST","argument":"@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"assurance.controller.AssuranceController.createNewAssurance"}],"name":"ts-preserve-service --> ts-assurance-service"},{"source":"ts-order-other-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForNameBatch"}],"name":"ts-order-other-service --> ts-station-service"},{"source":"ts-admin-order-service","target":"ts-order-service","requests":[{"type":"POST","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.addcreateNewOrder"},{"type":"PUT","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.updateOrder"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.findAllOrder"},{"type":"DELETE","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.deleteOrder"}],"name":"ts-admin-order-service --> ts-order-service"},{"source":"ts-travel-service","target":"ts-route-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"}],"name":"ts-travel-service --> ts-route-service"},{"source":"ts-preserve-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.create"}],"name":"ts-preserve-service --> ts-seat-service"},{"source":"ts-auth-service","target":"ts-verification-code-service","requests":[{"type":"GET","argument":"@PathVariable String verifyCode, HttpServletRequest request, HttpServletResponse response, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"verifycode.controller.VerifyCodeController.verifyCode"}],"name":"ts-auth-service --> ts-verification-code-service"},{"source":"ts-consign-service","target":"ts-consign-price-service","requests":[{"type":"GET","argument":"@PathVariable String weight, @PathVariable String isWithinRegion, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"consignprice.controller.ConsignPriceController.getPriceByWeightAndRegion"}],"name":"ts-consign-service --> ts-consign-price-service"},{"source":"ts-preserve-other-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-preserve-other-service --> ts-station-service"},{"source":"ts-execute-service","target":"ts-order-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.modifyOrder"},{"type":"GET","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.getOrderById"}],"name":"ts-execute-service --> ts-order-service"},{"source":"ts-inside-payment-service","target":"ts-payment-service","requests":[{"type":"POST","argument":"@RequestBody Payment info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"com.trainticket.controller.PaymentController.pay"}],"name":"ts-inside-payment-service --> ts-payment-service"},{"source":"ts-travel-service","target":"ts-train-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.retrieve"}],"name":"ts-travel-service --> ts-train-service"},{"source":"ts-admin-basic-info-service","target":"ts-config-service","requests":[{"type":"POST","argument":"@RequestBody Config info, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"config.controller.ConfigController.createConfig"},{"type":"PUT","argument":"@RequestBody Config info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.updateConfig"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.queryAll"},{"type":"DELETE","argument":"@PathVariable String configName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.deleteConfig"}],"name":"ts-admin-basic-info-service --> ts-config-service"},{"source":"ts-travel-plan-service","target":"ts-ticketinfo-service","requests":[{"type":"GET","argument":"@PathVariable String name, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForStationId"}],"name":"ts-travel-plan-service --> ts-ticketinfo-service"},{"source":"ts-preserve-other-service","target":"ts-food-service","requests":[{"type":"POST","argument":"@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"foodsearch.controller.FoodController.createFoodOrder"}],"name":"ts-preserve-other-service --> ts-food-service"},{"source":"ts-basic-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-basic-service --> ts-station-service"},{"source":"ts-seat-service","target":"ts-order-service","requests":[{"type":"GET","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.getTicketListByDateAndTripId"}],"name":"ts-seat-service --> ts-order-service"},{"source":"ts-food-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-food-service --> ts-station-service"},{"source":"ts-preserve-service","target":"ts-contacts-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.getContactsByContactsId"}],"name":"ts-preserve-service --> ts-contacts-service"},{"source":"ts-route-plan-service","target":"ts-travel-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.queryInfo"},{"type":"GET","argument":"@RequestBody ArrayList<String> routeIds, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getTripsByRouteId"}],"name":"ts-route-plan-service --> ts-travel-service"}]', '2023-05-02 03:16:19.113000', '[{"nodeName":"ts-travel-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":6},{"type":"Cyclic Dependency","problemNodes":["ts-travel2-service","ts-travel-service","ts-seat-service"],"id":0}],"contributor":"B","latency":10.0,"cpu":100.0,"ram":15.0,"disk":35.0,"x":162.36932673583217,"y":-0.5568837699339064,"z":87.77903513345069},{"nodeName":"ts-station-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":10}],"contributor":"B","latency":25.0,"cpu":40.0,"ram":35.0,"disk":5.0,"x":87.53409105366424,"y":5.872545595309161,"z":12.097318513350768},{"nodeName":"ts-cancel-service","nodeType":"service","patterns":[],"contributor":"D","latency":34.0,"cpu":20.0,"ram":45.0,"disk":80.0,"x":-157.6252834369485,"y":183.8482931831947,"z":-64.75418317024999},{"nodeName":"ts-contacts-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":3}],"contributor":"A","latency":14.0,"cpu":40.0,"ram":45.0,"disk":80.0,"x":-58.72824979064438,"y":-171.14742589350612,"z":-34.45161842731747},{"nodeName":"ts-admin-route-service","nodeType":"service","patterns":[],"contributor":"C","latency":85.0,"cpu":10.0,"ram":60.0,"disk":5.0,"x":390.8508098221204,"y":-146.95548587516532,"z":160.5914192544836},{"nodeName":"ts-admin-user-service","nodeType":"service","patterns":[],"contributor":"A","latency":10.0,"cpu":100.0,"ram":5.0,"disk":50.0,"x":-378.2883627691553,"y":69.40628821229674,"z":50.22612119540237},{"nodeName":"ts-consign-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"D","latency":53.0,"cpu":20.0,"ram":55.0,"disk":95.0,"x":-189.8727410321281,"y":-145.1703839410566,"z":11.830475159489074},{"nodeName":"ts-route-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":5}],"contributor":"C","latency":86.0,"cpu":30.0,"ram":40.0,"disk":20.0,"x":309.14332787573886,"y":-95.99149980045705,"z":102.52233006369026},{"nodeName":"ts-admin-travel-service","nodeType":"service","patterns":[],"contributor":"A","latency":94.0,"cpu":70.0,"ram":80.0,"disk":20.0,"x":282.0950331938849,"y":-24.686800950357267,"z":17.461181741812652},{"nodeName":"ts-payment-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"B","latency":19.0,"cpu":50.0,"ram":40.0,"disk":35.0,"x":-30.294219464201216,"y":392.57697753859134,"z":-98.99129669607461},{"nodeName":"ts-route-plan-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"B","latency":15.0,"cpu":80.0,"ram":85.0,"disk":95.0,"x":280.20765071222644,"y":34.722780255024716,"z":77.65776440147523},{"nodeName":"ts-ticketinfo-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":5}],"contributor":"D","latency":18.0,"cpu":70.0,"ram":20.0,"disk":80.0,"x":88.0191473344624,"y":-90.34960943440642,"z":38.36269584657856},{"nodeName":"ts-verification-code-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"E","latency":75.0,"cpu":80.0,"ram":25.0,"disk":50.0,"x":-528.5731155551503,"y":73.31584811993811,"z":181.6607682643646},{"nodeName":"ts-seat-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":6},{"type":"Cyclic Dependency","problemNodes":["ts-travel2-service","ts-travel-service","ts-seat-service"],"id":0}],"contributor":"D","latency":24.0,"cpu":100.0,"ram":95.0,"disk":80.0,"x":115.73584449070718,"y":25.173837097405993,"z":-111.3698527777714},{"nodeName":"ts-preserve-other-service","nodeType":"service","patterns":[],"contributor":"E","latency":39.0,"cpu":60.0,"ram":75.0,"disk":80.0,"x":-74.72823670351475,"y":-49.48128420850873,"z":-55.44789296004675},{"nodeName":"ts-consign-price-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"A","latency":38.0,"cpu":90.0,"ram":20.0,"disk":65.0,"x":-281.7338950175404,"y":-221.6698794156196,"z":22.236397000373174},{"nodeName":"ts-notification-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":3}],"contributor":"B","latency":51.0,"cpu":30.0,"ram":60.0,"disk":50.0,"x":-178.670193335937,"y":47.92748285025506,"z":-27.934233489928854},{"nodeName":"ts-order-other-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":8}],"contributor":"A","latency":74.0,"cpu":20.0,"ram":55.0,"disk":65.0,"x":0.07339878971762323,"y":103.48166527817222,"z":-167.92823469954382},{"nodeName":"ts-order-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":8}],"contributor":"E","latency":52.0,"cpu":10.0,"ram":50.0,"disk":35.0,"x":-15.640489047389751,"y":152.6957155107647,"z":-23.474528290369086},{"nodeName":"ts-user-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":4}],"contributor":"B","latency":17.0,"cpu":90.0,"ram":10.0,"disk":65.0,"x":-270.6932487920833,"y":49.38192089664321,"z":43.4810740102786},{"nodeName":"ts-config-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"E","latency":53.0,"cpu":30.0,"ram":50.0,"disk":20.0,"x":119.42792605118758,"y":-122.03192847851831,"z":-163.9956111584221},{"nodeName":"ts-food-map-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"E","latency":58.0,"cpu":40.0,"ram":75.0,"disk":65.0,"x":-31.452958022840075,"y":-38.53373101637313,"z":247.67328067340304},{"nodeName":"ts-inside-payment-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"C","latency":14.0,"cpu":40.0,"ram":65.0,"disk":65.0,"x":-17.39062284211314,"y":283.1680589216282,"z":-92.1112675082227},{"nodeName":"ts-admin-basic-info-service","nodeType":"service","patterns":[],"contributor":"E","latency":46.0,"cpu":90.0,"ram":100.0,"disk":20.0,"x":100.87554665040692,"y":-221.9692414080226,"z":-65.62865388159244},{"nodeName":"ts-rebook-service","nodeType":"service","patterns":[],"contributor":"C","latency":39.0,"cpu":60.0,"ram":35.0,"disk":65.0,"x":105.43490302669011,"y":154.2047902191768,"z":-75.2485100876167},{"nodeName":"ts-auth-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"D","latency":36.0,"cpu":50.0,"ram":80.0,"disk":35.0,"x":-423.5545817801102,"y":63.351440659054354,"z":129.78093184675575},{"nodeName":"ts-train-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":4}],"contributor":"A","latency":67.0,"cpu":50.0,"ram":30.0,"disk":95.0,"x":232.54084556870785,"y":-161.08456762983658,"z":-6.087659654489257},{"nodeName":"ts-travel-plan-service","nodeType":"service","patterns":[],"contributor":"C","latency":54.0,"cpu":90.0,"ram":90.0,"disk":5.0,"x":222.38702069883846,"y":66.64679545432439,"z":-13.551528127996516},{"nodeName":"ts-travel2-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":5},{"type":"Cyclic Dependency","problemNodes":["ts-travel2-service","ts-travel-service","ts-seat-service"],"id":0}],"contributor":"D","latency":47.0,"cpu":50.0,"ram":70.0,"disk":35.0,"x":221.43172394442504,"y":-40.195473025272655,"z":-74.00544981648086},{"nodeName":"ts-food-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"B","latency":83.0,"cpu":70.0,"ram":90.0,"disk":35.0,"x":-0.3608849228232214,"y":-24.62774039917835,"z":137.78567725425722},{"nodeName":"ts-execute-service","nodeType":"service","patterns":[],"contributor":"B","latency":83.0,"cpu":20.0,"ram":65.0,"disk":80.0,"x":-67.82158706021032,"y":191.59897723024685,"z":-149.00007356313768},{"nodeName":"ts-assurance-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"C","latency":14.0,"cpu":60.0,"ram":85.0,"disk":50.0,"x":-176.4046567903065,"y":-72.76546175126157,"z":-5.253696731939541},{"nodeName":"ts-security-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"A","latency":37.0,"cpu":30.0,"ram":70.0,"disk":20.0,"x":-100.58048556836107,"y":54.75753786510973,"z":-100.171724251455},{"nodeName":"ts-admin-order-service","nodeType":"service","patterns":[],"contributor":"D","latency":18.0,"cpu":70.0,"ram":30.0,"disk":50.0,"x":13.302603111570667,"y":211.00336899485532,"z":-148.27956285076786},{"nodeName":"ts-basic-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"C","latency":87.0,"cpu":80.0,"ram":15.0,"disk":35.0,"x":182.1321954907534,"y":-198.450173099353,"z":90.011610824586},{"nodeName":"ts-preserve-service","nodeType":"service","patterns":[],"contributor":"A","latency":36.0,"cpu":80.0,"ram":95.0,"disk":65.0,"x":-84.89662855235416,"y":-22.043187447295626,"z":45.78762115302258},{"nodeName":"ts-price-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"E","latency":76.0,"cpu":60.0,"ram":25.0,"disk":20.0,"x":154.54868976301486,"y":-315.05663778580106,"z":20.376915064297066}]');
INSERT INTO msgraph.graphs (instance_id, create_date, git_commit_id, graph_name, links, modify_date, nodes) VALUES (2, '2023-05-02 03:12:23.808000', 'a8c412', 'traintestWithGit', '[{"source":"ts-security-service","target":"ts-order-other-service","requests":[{"type":"GET","argument":"@PathVariable Date checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.securityInfoCheck"}],"name":"ts-security-service --> ts-order-other-service"},{"source":"ts-rebook-service","target":"ts-inside-payment-service","requests":[{"type":"POST","argument":"@RequestBody PaymentInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"inside_payment.controller.InsidePaymentController.payDifference"},{"type":"GET","argument":"@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"inside_payment.controller.InsidePaymentController.drawBack"}],"name":"ts-rebook-service --> ts-inside-payment-service"},{"source":"ts-admin-basic-info-service","target":"ts-config-service","requests":[{"type":"POST","argument":"@RequestBody Config info, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"config.controller.ConfigController.createConfig"},{"type":"PUT","argument":"@RequestBody Config info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.updateConfig"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.queryAll"},{"type":"DELETE","argument":"@PathVariable String configName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.deleteConfig"}],"name":"ts-admin-basic-info-service --> ts-config-service"},{"source":"ts-preserve-other-service","target":"ts-travel2-service","requests":[{"type":"POST","argument":"@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.getTripAllDetailInfo"}],"name":"ts-preserve-other-service --> ts-travel2-service"},{"source":"ts-preserve-service","target":"ts-contacts-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.getContactsByContactsId"}],"name":"ts-preserve-service --> ts-contacts-service"},{"source":"ts-preserve-service","target":"ts-user-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getUserByUserId"}],"name":"ts-preserve-service --> ts-user-service"},{"source":"ts-consign-service","target":"ts-consign-price-service","requests":[{"type":"GET","argument":"@PathVariable String weight, @PathVariable String isWithinRegion, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"consignprice.controller.ConsignPriceController.getPriceByWeightAndRegion"}],"name":"ts-consign-service --> ts-consign-price-service"},{"source":"ts-travel-plan-service","target":"ts-seat-service","requests":[{"type":"GET","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.getLeftTicketOfInterval"}],"name":"ts-travel-plan-service --> ts-seat-service"},{"source":"ts-preserve-service","target":"ts-consign-service","requests":[{"type":"POST","argument":"@RequestBody Consign request, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"consign.controller.ConsignController.insertConsign"}],"name":"ts-preserve-service --> ts-consign-service"},{"source":"ts-rebook-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.create"}],"name":"ts-rebook-service --> ts-seat-service"},{"source":"ts-ticketinfo-service","target":"ts-basic-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.BasicController.queryForTravel"},{"type":"GET","argument":"@PathVariable String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.BasicController.queryForStationId"}],"name":"ts-ticketinfo-service --> ts-basic-service"},{"source":"ts-admin-travel-service","target":"ts-travel2-service","requests":[{"type":"PUT","argument":"@RequestBody TravelInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.updateTrip"},{"type":"POST","argument":"@RequestBody TravelInfo routeIds, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"travel2.controller.Travel2Controller.createTrip"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.adminQueryAll"},{"type":"DELETE","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.deleteTrip"}],"name":"ts-admin-travel-service --> ts-travel2-service"},{"source":"ts-execute-service","target":"ts-order-other-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.modifyOrder"},{"type":"GET","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.getOrderById"}],"name":"ts-execute-service --> ts-order-other-service"},{"source":"ts-travel2-service","target":"ts-order-other-service","requests":[{"type":"GET","argument":"@PathVariable Date travelDate, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.calculateSoldTicket"}],"name":"ts-travel2-service --> ts-order-other-service"},{"source":"ts-admin-order-service","target":"ts-order-service","requests":[{"type":"POST","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.addcreateNewOrder"},{"type":"PUT","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.updateOrder"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.findAllOrder"},{"type":"DELETE","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.deleteOrder"}],"name":"ts-admin-order-service --> ts-order-service"},{"source":"ts-basic-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-basic-service --> ts-station-service"},{"source":"ts-travel-plan-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForNameBatch"}],"name":"ts-travel-plan-service --> ts-station-service"},{"source":"ts-preserve-other-service","target":"ts-assurance-service","requests":[{"type":"GET","argument":"@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"assurance.controller.AssuranceController.createNewAssurance"}],"name":"ts-preserve-other-service --> ts-assurance-service"},{"source":"ts-rebook-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationIdForName#quot;) String stationId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryById"}],"name":"ts-rebook-service --> ts-station-service"},{"source":"ts-admin-order-service","target":"ts-order-other-service","requests":[{"type":"POST","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.addcreateNewOrder"},{"type":"PUT","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.updateOrder"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.findAllOrder"},{"type":"DELETE","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.deleteOrder"}],"name":"ts-admin-order-service --> ts-order-other-service"},{"source":"ts-preserve-other-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"}],"name":"ts-preserve-other-service --> ts-ticketinfo-service"},{"source":"ts-travel2-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"},{"type":"GET","argument":"@PathVariable String name, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForStationId"}],"name":"ts-travel2-service --> ts-ticketinfo-service"},{"source":"ts-travel-plan-service","target":"ts-travel2-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.queryInfo"}],"name":"ts-travel-plan-service --> ts-travel2-service"},{"source":"ts-basic-service","target":"ts-train-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.retrieve"}],"name":"ts-basic-service --> ts-train-service"},{"source":"ts-cancel-service","target":"ts-order-other-service","requests":[{"type":"PUT","argument":"@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.saveOrderInfo"},{"type":"GET","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.getOrderById"}],"name":"ts-cancel-service --> ts-order-other-service"},{"source":"ts-preserve-service","target":"ts-food-service","requests":[{"type":"POST","argument":"@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"foodsearch.controller.FoodController.createFoodOrder"}],"name":"ts-preserve-service --> ts-food-service"},{"source":"ts-preserve-service","target":"ts-travel-service","requests":[{"type":"GET","argument":"@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getTripAllDetailInfo"}],"name":"ts-preserve-service --> ts-travel-service"},{"source":"ts-user-service","target":"ts-auth-service","requests":[{"type":"POST","argument":"@RequestBody AuthDto authDto","msReturn":"HttpEntity<Response>","endpointFunction":"auth.controller.AuthController.createDefaultUser"}],"name":"ts-user-service --> ts-auth-service"},{"source":"ts-order-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForNameBatch"}],"name":"ts-order-service --> ts-station-service"},{"source":"ts-admin-basic-info-service","target":"ts-train-service","requests":[{"type":"POST","argument":"@RequestBody TrainType trainType, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.create"},{"type":"PUT","argument":"@RequestBody TrainType trainType, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.update"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.query"},{"type":"DELETE","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.delete"}],"name":"ts-admin-basic-info-service --> ts-train-service"},{"source":"ts-preserve-service","target":"ts-assurance-service","requests":[{"type":"POST","argument":"@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"assurance.controller.AssuranceController.createNewAssurance"}],"name":"ts-preserve-service --> ts-assurance-service"},{"source":"ts-inside-payment-service","target":"ts-order-other-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.modifyOrder"}],"name":"ts-inside-payment-service --> ts-order-other-service"},{"source":"ts-admin-user-service","target":"ts-user-service","requests":[{"type":"PUT","argument":"@RequestBody UserDto user, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.updateUser"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getAllUser"},{"type":"DELETE","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.deleteUserById"}],"name":"ts-admin-user-service --> ts-user-service"},{"source":"ts-preserve-service","target":"ts-notification-service","requests":[{"type":"POST","argument":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"notification.controller.NotificationController.preserve_success"}],"name":"ts-preserve-service --> ts-notification-service"},{"source":"ts-admin-route-service","target":"ts-route-service","requests":[{"type":"POST","argument":"@RequestBody RouteInfo createAndModifyRouteInfo, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"route.controller.RouteController.createAndModifyRoute"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryAll"},{"type":"DELETE","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.deleteRoute"}],"name":"ts-admin-route-service --> ts-route-service"},{"source":"ts-cancel-service","target":"ts-notification-service","requests":[{"type":"POST","argument":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"notification.controller.NotificationController.order_cancel_success"}],"name":"ts-cancel-service --> ts-notification-service"},{"source":"ts-preserve-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-preserve-service --> ts-station-service"},{"source":"ts-preserve-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"}],"name":"ts-preserve-service --> ts-ticketinfo-service"},{"source":"ts-travel2-service","target":"ts-train-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.retrieve"}],"name":"ts-travel2-service --> ts-train-service"},{"source":"ts-inside-payment-service","target":"ts-order-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.modifyOrder"}],"name":"ts-inside-payment-service --> ts-order-service"},{"source":"ts-basic-service","target":"ts-price-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @PathVariable String trainType, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.query"}],"name":"ts-basic-service --> ts-price-service"},{"source":"ts-admin-basic-info-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody Station station, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"fdse.microservice.controller.StationController.create"},{"type":"PUT","argument":"@RequestBody Station station, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.update"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.query"},{"type":"DELETE","argument":"@RequestBody Station station, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"fdse.microservice.controller.StationController.delete"}],"name":"ts-admin-basic-info-service --> ts-station-service"},{"source":"ts-inside-payment-service","target":"ts-payment-service","requests":[{"type":"POST","argument":"@RequestBody Payment info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"com.trainticket.controller.PaymentController.pay"}],"name":"ts-inside-payment-service --> ts-payment-service"},{"source":"ts-travel-plan-service","target":"ts-ticketinfo-service","requests":[{"type":"GET","argument":"@PathVariable String name, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForStationId"}],"name":"ts-travel-plan-service --> ts-ticketinfo-service"},{"source":"ts-execute-service","target":"ts-order-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.modifyOrder"},{"type":"GET","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.getOrderById"}],"name":"ts-execute-service --> ts-order-service"},{"source":"ts-preserve-other-service","target":"ts-notification-service","requests":[{"type":"POST","argument":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"notification.controller.NotificationController.preserve_success"}],"name":"ts-preserve-other-service --> ts-notification-service"},{"source":"ts-travel-service","target":"ts-train-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.retrieve"}],"name":"ts-travel-service --> ts-train-service"},{"source":"ts-preserve-service","target":"ts-order-service","requests":[{"type":"POST","argument":"@RequestBody Order createOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.createNewOrder"}],"name":"ts-preserve-service --> ts-order-service"},{"source":"ts-preserve-other-service","target":"ts-user-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getUserByUserId"}],"name":"ts-preserve-other-service --> ts-user-service"},{"source":"ts-auth-service","target":"ts-verification-code-service","requests":[{"type":"GET","argument":"@PathVariable String verifyCode, HttpServletRequest request, HttpServletResponse response, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"verifycode.controller.VerifyCodeController.verifyCode"}],"name":"ts-auth-service --> ts-verification-code-service"},{"source":"ts-cancel-service","target":"ts-user-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getUserByUserId"}],"name":"ts-cancel-service --> ts-user-service"},{"source":"ts-preserve-other-service","target":"ts-contacts-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.getContactsByContactsId"}],"name":"ts-preserve-other-service --> ts-contacts-service"},{"source":"ts-travel-plan-service","target":"ts-travel-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.queryInfo"}],"name":"ts-travel-plan-service --> ts-travel-service"},{"source":"ts-seat-service","target":"ts-order-service","requests":[{"type":"GET","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.getTicketListByDateAndTripId"}],"name":"ts-seat-service --> ts-order-service"},{"source":"ts-route-plan-service","target":"ts-travel2-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.queryInfo"},{"type":"GET","argument":"@RequestBody ArrayList<String> routeIds, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.getTripsByRouteId"}],"name":"ts-route-plan-service --> ts-travel2-service"},{"source":"ts-preserve-other-service","target":"ts-consign-service","requests":[{"type":"POST","argument":"@RequestBody Consign request, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"consign.controller.ConsignController.insertConsign"}],"name":"ts-preserve-other-service --> ts-consign-service"},{"source":"ts-preserve-other-service","target":"ts-security-service","requests":[{"type":"GET","argument":"@PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"security.controller.SecurityController.check"}],"name":"ts-preserve-other-service --> ts-security-service"},{"source":"ts-preserve-other-service","target":"ts-order-other-service","requests":[{"type":"POST","argument":"@RequestBody Order createOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.createNewOrder"}],"name":"ts-preserve-other-service --> ts-order-other-service"},{"source":"ts-basic-service","target":"ts-route-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"}],"name":"ts-basic-service --> ts-route-service"},{"source":"ts-travel-service","target":"ts-route-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"}],"name":"ts-travel-service --> ts-route-service"},{"source":"ts-travel-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"},{"type":"GET","argument":"@PathVariable String name, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForStationId"}],"name":"ts-travel-service --> ts-ticketinfo-service"},{"source":"ts-admin-travel-service","target":"ts-travel-service","requests":[{"type":"PUT","argument":"@RequestBody TravelInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.updateTrip"},{"type":"POST","argument":"@RequestBody TravelInfo routeIds, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"travel.controller.TravelController.createTrip"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.adminQueryAll"},{"type":"DELETE","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.deleteTrip"}],"name":"ts-admin-travel-service --> ts-travel-service"},{"source":"ts-food-service","target":"ts-travel-service","requests":[{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getRouteByTripId"}],"name":"ts-food-service --> ts-travel-service"},{"source":"ts-seat-service","target":"ts-config-service","requests":[{"type":"GET","argument":"@PathVariable String configName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.retrieve"}],"name":"ts-seat-service --> ts-config-service"},{"source":"ts-preserve-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.create"}],"name":"ts-preserve-service --> ts-seat-service"},{"source":"ts-route-plan-service","target":"ts-route-service","requests":[{"type":"POST","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"},{"type":"GET","argument":"@PathVariable String startId, @PathVariable String terminalId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryByStartAndTerminal"}],"name":"ts-route-plan-service --> ts-route-service"},{"source":"ts-order-other-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForNameBatch"}],"name":"ts-order-other-service --> ts-station-service"},{"source":"ts-preserve-other-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.create"}],"name":"ts-preserve-other-service --> ts-seat-service"},{"source":"ts-route-plan-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-route-plan-service --> ts-station-service"},{"source":"ts-admin-basic-info-service","target":"ts-contacts-service","requests":[{"type":"POST","argument":"@RequestBody Contacts aci, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"contacts.controller.ContactsController.createNewContactsAdmin"},{"type":"PUT","argument":"@RequestBody Contacts info, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.modifyContacts"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.getAllContacts"},{"type":"DELETE","argument":"@PathVariable String contactsId, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.deleteContacts"}],"name":"ts-admin-basic-info-service --> ts-contacts-service"},{"source":"ts-travel-service","target":"ts-order-service","requests":[{"type":"GET","argument":"@PathVariable Date travelDate, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.calculateSoldTicket"}],"name":"ts-travel-service --> ts-order-service"},{"source":"ts-preserve-other-service","target":"ts-food-service","requests":[{"type":"POST","argument":"@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"foodsearch.controller.FoodController.createFoodOrder"}],"name":"ts-preserve-other-service --> ts-food-service"},{"source":"ts-security-service","target":"ts-order-service","requests":[{"type":"GET","argument":"@PathVariable Date checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.securityInfoCheck"}],"name":"ts-security-service --> ts-order-service"},{"source":"ts-food-service","target":"ts-food-map-service","requests":[{"type":"GET","argument":"@RequestBody List<String> stationIdList","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"food.controller.FoodStoreController.getFoodStoresByStationIds"},{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"food.controller.TrainFoodController.getTrainFoodOfTrip"}],"name":"ts-food-service --> ts-food-map-service"},{"source":"ts-food-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-food-service --> ts-station-service"},{"source":"ts-cancel-service","target":"ts-inside-payment-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"inside_payment.controller.InsidePaymentController.drawBack"}],"name":"ts-cancel-service --> ts-inside-payment-service"},{"source":"ts-preserve-other-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-preserve-other-service --> ts-station-service"},{"source":"ts-seat-service","target":"ts-order-other-service","requests":[{"type":"GET","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.getTicketListByDateAndTripId"}],"name":"ts-seat-service --> ts-order-other-service"},{"source":"ts-travel2-service","target":"ts-route-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"}],"name":"ts-travel2-service --> ts-route-service"},{"source":"ts-travel-plan-service","target":"ts-route-plan-service","requests":[{"type":"GET","argument":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"plan.controller.RoutePlanController.getCheapestRoutes"},{"type":"GET","argument":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"plan.controller.RoutePlanController.getMinStopStations"},{"type":"GET","argument":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"plan.controller.RoutePlanController.getQuickestRoutes"}],"name":"ts-travel-plan-service --> ts-route-plan-service"},{"source":"ts-preserve-service","target":"ts-security-service","requests":[{"type":"GET","argument":"@PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"security.controller.SecurityController.check"}],"name":"ts-preserve-service --> ts-security-service"},{"source":"ts-cancel-service","target":"ts-order-service","requests":[{"type":"PUT","argument":"@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.saveOrderInfo"},{"type":"GET","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.getOrderById"}],"name":"ts-cancel-service --> ts-order-service"},{"source":"ts-admin-basic-info-service","target":"ts-price-service","requests":[{"type":"POST","argument":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"price.controller.PriceController.create"},{"type":"PUT","argument":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.update"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.queryAll"},{"type":"DELETE","argument":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.delete"}],"name":"ts-admin-basic-info-service --> ts-price-service"},{"source":"ts-route-plan-service","target":"ts-travel-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.queryInfo"},{"type":"GET","argument":"@RequestBody ArrayList<String> routeIds, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getTripsByRouteId"}],"name":"ts-route-plan-service --> ts-travel-service"}]', '2023-05-02 03:15:45.142000', '[{"nodeName":"ts-payment-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"B","latency":19.0,"cpu":50.0,"ram":40.0,"disk":35.0,"x":213.65610204059448,"y":-338.6459438573686,"z":134.06387663222262},{"nodeName":"ts-assurance-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"C","latency":14.0,"cpu":60.0,"ram":85.0,"disk":50.0,"x":-8.26843406150459,"y":163.11085056524215,"z":108.6547462127559},{"nodeName":"ts-food-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"B","latency":83.0,"cpu":70.0,"ram":90.0,"disk":35.0,"x":-145.67771662134382,"y":54.317830537642166,"z":17.215422184344103},{"nodeName":"ts-route-plan-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"B","latency":15.0,"cpu":80.0,"ram":85.0,"disk":95.0,"x":-165.83538398153945,"y":-117.44364135816046,"z":-222.73381629394618},{"nodeName":"ts-config-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"E","latency":53.0,"cpu":30.0,"ram":50.0,"disk":20.0,"x":93.41842143431221,"y":31.63552629407802,"z":-126.96008504817947},{"nodeName":"ts-admin-order-service","nodeType":"service","patterns":[],"contributor":"D","latency":18.0,"cpu":70.0,"ram":30.0,"disk":50.0,"x":174.689340334532,"y":-149.48479031944393,"z":68.99070917345776},{"nodeName":"ts-admin-route-service","nodeType":"service","patterns":[],"contributor":"C","latency":85.0,"cpu":10.0,"ram":60.0,"disk":5.0,"x":-259.832152471686,"y":-11.165190130067296,"z":-407.9562199603891},{"nodeName":"ts-train-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":4}],"contributor":"A","latency":67.0,"cpu":50.0,"ram":30.0,"disk":95.0,"x":-119.3448708782921,"y":116.47981752090395,"z":-234.64841312676234},{"nodeName":"ts-inside-payment-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"C","latency":14.0,"cpu":40.0,"ram":65.0,"disk":65.0,"x":157.83363464246997,"y":-248.0324883625928,"z":90.309683933275},{"nodeName":"ts-consign-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"D","latency":53.0,"cpu":20.0,"ram":55.0,"disk":95.0,"x":-68.76186120496708,"y":137.48272935263438,"z":178.3569754671544},{"nodeName":"ts-consign-price-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"A","latency":38.0,"cpu":90.0,"ram":20.0,"disk":65.0,"x":-122.12938753733019,"y":186.52709283515023,"z":269.87449423014976},{"nodeName":"ts-contacts-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":3}],"contributor":"A","latency":14.0,"cpu":40.0,"ram":45.0,"disk":80.0,"x":35.393240344058704,"y":174.6713326455567,"z":-23.374314089254625},{"nodeName":"ts-execute-service","nodeType":"service","patterns":[],"contributor":"B","latency":83.0,"cpu":20.0,"ram":65.0,"disk":80.0,"x":144.56180611892944,"y":-196.47554342986587,"z":9.791522241559008},{"nodeName":"ts-price-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"E","latency":76.0,"cpu":60.0,"ram":25.0,"disk":20.0,"x":49.46424898302329,"y":154.45745433136628,"z":-323.43150944063825},{"nodeName":"ts-travel-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":5}],"contributor":"B","latency":10.0,"cpu":100.0,"ram":15.0,"disk":35.0,"x":-203.17618846352187,"y":-16.25543456401314,"z":-100.95280113248654},{"nodeName":"ts-user-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":4}],"contributor":"B","latency":17.0,"cpu":90.0,"ram":10.0,"disk":65.0,"x":101.80137476451101,"y":61.428500346079055,"z":247.67285407942433},{"nodeName":"ts-order-other-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":8}],"contributor":"A","latency":74.0,"cpu":20.0,"ram":55.0,"disk":65.0,"x":153.08895628789608,"y":-84.20914545967275,"z":-23.88476605689179},{"nodeName":"ts-cancel-service","nodeType":"service","patterns":[],"contributor":"D","latency":34.0,"cpu":20.0,"ram":45.0,"disk":80.0,"x":171.28784669087605,"y":-94.83415525491624,"z":170.7801248368473},{"nodeName":"ts-food-map-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"E","latency":58.0,"cpu":40.0,"ram":75.0,"disk":65.0,"x":-235.31564375376323,"y":124.96428576674631,"z":48.90306402683658},{"nodeName":"ts-ticketinfo-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":5}],"contributor":"D","latency":18.0,"cpu":70.0,"ram":20.0,"disk":80.0,"x":-105.54959775704738,"y":60.77648844691379,"z":-88.24375243331885},{"nodeName":"ts-route-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":5}],"contributor":"C","latency":86.0,"cpu":30.0,"ram":40.0,"disk":20.0,"x":-199.8762069169878,"y":-18.5539206162383,"z":-310.79021176085485},{"nodeName":"ts-security-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"A","latency":37.0,"cpu":30.0,"ram":70.0,"disk":20.0,"x":98.72639596877374,"y":-11.991627026405666,"z":74.27636371271032},{"nodeName":"ts-preserve-service","nodeType":"service","patterns":[],"contributor":"A","latency":36.0,"cpu":80.0,"ram":95.0,"disk":65.0,"x":-45.27369647674381,"y":40.49774133209262,"z":89.5219525400127},{"nodeName":"ts-station-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":10}],"contributor":"B","latency":25.0,"cpu":40.0,"ram":35.0,"disk":5.0,"x":-14.500246691622033,"y":-53.56857909191045,"z":-102.46285404004281},{"nodeName":"ts-admin-basic-info-service","nodeType":"service","patterns":[],"contributor":"E","latency":46.0,"cpu":90.0,"ram":100.0,"disk":20.0,"x":56.70745208789208,"y":143.1369747973191,"z":-194.90953584575257},{"nodeName":"ts-travel-plan-service","nodeType":"service","patterns":[],"contributor":"C","latency":54.0,"cpu":90.0,"ram":90.0,"disk":5.0,"x":-141.55589745409463,"y":-126.52470145876285,"z":-113.55536568401283},{"nodeName":"ts-auth-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"D","latency":36.0,"cpu":50.0,"ram":80.0,"disk":35.0,"x":167.2111288805063,"y":78.452412439806,"z":412.64593208784044},{"nodeName":"ts-travel2-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":4}],"contributor":"D","latency":47.0,"cpu":50.0,"ram":70.0,"disk":35.0,"x":-87.10043444183869,"y":-20.151369047204625,"z":-197.61272871258438},{"nodeName":"ts-seat-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":4}],"contributor":"D","latency":24.0,"cpu":100.0,"ram":95.0,"disk":80.0,"x":11.641651050205649,"y":-78.8399291728769,"z":-16.22066170000996},{"nodeName":"ts-preserve-other-service","nodeType":"service","patterns":[],"contributor":"E","latency":39.0,"cpu":60.0,"ram":75.0,"disk":80.0,"x":23.724190075136,"y":84.05792587273952,"z":34.384600772342914},{"nodeName":"ts-admin-user-service","nodeType":"service","patterns":[],"contributor":"A","latency":10.0,"cpu":100.0,"ram":5.0,"disk":50.0,"x":157.3793202386773,"y":117.89192858070574,"z":323.74042141375315},{"nodeName":"ts-notification-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":3}],"contributor":"B","latency":51.0,"cpu":30.0,"ram":60.0,"disk":50.0,"x":83.01841873975492,"y":37.97503232943722,"z":152.67553301872192},{"nodeName":"ts-verification-code-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"E","latency":75.0,"cpu":80.0,"ram":25.0,"disk":50.0,"x":214.92966660453325,"y":91.49605827544319,"z":513.2514602475964},{"nodeName":"ts-rebook-service","nodeType":"service","patterns":[],"contributor":"C","latency":39.0,"cpu":60.0,"ram":35.0,"disk":65.0,"x":48.88188973492133,"y":-201.38499127515476,"z":-45.46727828492626},{"nodeName":"ts-admin-travel-service","nodeType":"service","patterns":[],"contributor":"A","latency":94.0,"cpu":70.0,"ram":80.0,"disk":20.0,"x":-224.62432050713332,"y":-0.3857775953027085,"z":-207.55100404192098},{"nodeName":"ts-order-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":8}],"contributor":"E","latency":52.0,"cpu":10.0,"ram":50.0,"disk":35.0,"x":34.86112599741027,"y":-151.28508468039198,"z":86.01627794972102},{"nodeName":"ts-basic-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"C","latency":87.0,"cpu":80.0,"ram":15.0,"disk":35.0,"x":-45.54600821822148,"y":59.69583111337476,"z":-290.45971651629566}]');
INSERT INTO msgraph.graphs (instance_id, create_date, git_commit_id, graph_name, links, modify_date, nodes) VALUES (52, '2023-05-02 03:14:51.063000', 'b0c4352', 'test', '[{"source":"ts-cancel-service","target":"ts-order-other-service","requests":[{"type":"PUT","argument":"@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.saveOrderInfo"},{"type":"GET","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.getOrderById"}],"name":"ts-cancel-service --> ts-order-other-service"},{"source":"ts-admin-travel-service","target":"ts-travel-service","requests":[{"type":"PUT","argument":"@RequestBody TravelInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.updateTrip"},{"type":"POST","argument":"@RequestBody TravelInfo routeIds, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"travel.controller.TravelController.createTrip"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.adminQueryAll"},{"type":"DELETE","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.deleteTrip"}],"name":"ts-admin-travel-service --> ts-travel-service"},{"source":"ts-route-plan-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-route-plan-service --> ts-station-service"},{"source":"ts-cancel-service","target":"ts-order-service","requests":[{"type":"PUT","argument":"@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.saveOrderInfo"},{"type":"GET","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.getOrderById"}],"name":"ts-cancel-service --> ts-order-service"},{"source":"ts-admin-order-service","target":"ts-order-other-service","requests":[{"type":"POST","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.addcreateNewOrder"},{"type":"PUT","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.updateOrder"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.findAllOrder"},{"type":"DELETE","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.deleteOrder"}],"name":"ts-admin-order-service --> ts-order-other-service"},{"source":"ts-travel-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.getLeftTicketOfInterval"}],"name":"ts-travel-service --> ts-seat-service"},{"source":"ts-admin-basic-info-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody Station station, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"fdse.microservice.controller.StationController.create"},{"type":"PUT","argument":"@RequestBody Station station, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.update"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.query"},{"type":"DELETE","argument":"@RequestBody Station station, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"fdse.microservice.controller.StationController.delete"}],"name":"ts-admin-basic-info-service --> ts-station-service"},{"source":"ts-admin-basic-info-service","target":"ts-config-service","requests":[{"type":"POST","argument":"@RequestBody Config info, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"config.controller.ConfigController.createConfig"},{"type":"PUT","argument":"@RequestBody Config info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.updateConfig"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.queryAll"},{"type":"DELETE","argument":"@PathVariable String configName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.deleteConfig"}],"name":"ts-admin-basic-info-service --> ts-config-service"},{"source":"ts-travel-plan-service","target":"ts-travel-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.queryInfo"}],"name":"ts-travel-plan-service --> ts-travel-service"},{"source":"ts-travel2-service","target":"ts-route-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"}],"name":"ts-travel2-service --> ts-route-service"},{"source":"ts-rebook-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.create"}],"name":"ts-rebook-service --> ts-seat-service"},{"source":"ts-preserve-other-service","target":"ts-consign-service","requests":[{"type":"POST","argument":"@RequestBody Consign request, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"consign.controller.ConsignController.insertConsign"}],"name":"ts-preserve-other-service --> ts-consign-service"},{"source":"ts-preserve-other-service","target":"ts-user-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getUserByUserId"}],"name":"ts-preserve-other-service --> ts-user-service"},{"source":"ts-user-service","target":"ts-auth-service","requests":[{"type":"POST","argument":"@RequestBody AuthDto authDto","msReturn":"HttpEntity<Response>","endpointFunction":"auth.controller.AuthController.createDefaultUser"}],"name":"ts-user-service --> ts-auth-service"},{"source":"ts-route-plan-service","target":"ts-route-service","requests":[{"type":"POST","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"},{"type":"GET","argument":"@PathVariable String startId, @PathVariable String terminalId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryByStartAndTerminal"}],"name":"ts-route-plan-service --> ts-route-service"},{"source":"ts-basic-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-basic-service --> ts-station-service"},{"source":"ts-travel-plan-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForNameBatch"}],"name":"ts-travel-plan-service --> ts-station-service"},{"source":"ts-admin-basic-info-service","target":"ts-train-service","requests":[{"type":"POST","argument":"@RequestBody TrainType trainType, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.create"},{"type":"PUT","argument":"@RequestBody TrainType trainType, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.update"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.query"},{"type":"DELETE","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.delete"}],"name":"ts-admin-basic-info-service --> ts-train-service"},{"source":"ts-ticketinfo-service","target":"ts-basic-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.BasicController.queryForTravel"},{"type":"GET","argument":"@PathVariable String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.BasicController.queryForStationId"}],"name":"ts-ticketinfo-service --> ts-basic-service"},{"source":"ts-preserve-other-service","target":"ts-assurance-service","requests":[{"type":"GET","argument":"@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"assurance.controller.AssuranceController.createNewAssurance"}],"name":"ts-preserve-other-service --> ts-assurance-service"},{"source":"ts-inside-payment-service","target":"ts-payment-service","requests":[{"type":"POST","argument":"@RequestBody Payment info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"com.trainticket.controller.PaymentController.pay"}],"name":"ts-inside-payment-service --> ts-payment-service"},{"source":"ts-travel-plan-service","target":"ts-ticketinfo-service","requests":[{"type":"GET","argument":"@PathVariable String name, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForStationId"}],"name":"ts-travel-plan-service --> ts-ticketinfo-service"},{"source":"ts-preserve-other-service","target":"ts-order-other-service","requests":[{"type":"POST","argument":"@RequestBody Order createOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.createNewOrder"}],"name":"ts-preserve-other-service --> ts-order-other-service"},{"source":"ts-travel2-service","target":"ts-order-other-service","requests":[{"type":"GET","argument":"@PathVariable Date travelDate, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.calculateSoldTicket"}],"name":"ts-travel2-service --> ts-order-other-service"},{"source":"ts-preserve-service","target":"ts-user-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getUserByUserId"}],"name":"ts-preserve-service --> ts-user-service"},{"source":"ts-preserve-other-service","target":"ts-food-service","requests":[{"type":"POST","argument":"@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"foodsearch.controller.FoodController.createFoodOrder"}],"name":"ts-preserve-other-service --> ts-food-service"},{"source":"ts-rebook-service","target":"ts-inside-payment-service","requests":[{"type":"POST","argument":"@RequestBody PaymentInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"inside_payment.controller.InsidePaymentController.payDifference"},{"type":"GET","argument":"@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"inside_payment.controller.InsidePaymentController.drawBack"}],"name":"ts-rebook-service --> ts-inside-payment-service"},{"source":"ts-cancel-service","target":"ts-notification-service","requests":[{"type":"POST","argument":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"notification.controller.NotificationController.order_cancel_success"}],"name":"ts-cancel-service --> ts-notification-service"},{"source":"ts-seat-service","target":"ts-order-other-service","requests":[{"type":"GET","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.getTicketListByDateAndTripId"}],"name":"ts-seat-service --> ts-order-other-service"},{"source":"ts-execute-service","target":"ts-order-other-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.modifyOrder"},{"type":"GET","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.getOrderById"}],"name":"ts-execute-service --> ts-order-other-service"},{"source":"ts-travel-plan-service","target":"ts-seat-service","requests":[{"type":"GET","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.getLeftTicketOfInterval"}],"name":"ts-travel-plan-service --> ts-seat-service"},{"source":"ts-cancel-service","target":"ts-user-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getUserByUserId"}],"name":"ts-cancel-service --> ts-user-service"},{"source":"ts-admin-basic-info-service","target":"ts-price-service","requests":[{"type":"POST","argument":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"price.controller.PriceController.create"},{"type":"PUT","argument":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.update"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.queryAll"},{"type":"DELETE","argument":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.delete"}],"name":"ts-admin-basic-info-service --> ts-price-service"},{"source":"ts-preserve-service","target":"ts-notification-service","requests":[{"type":"POST","argument":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"notification.controller.NotificationController.preserve_success"}],"name":"ts-preserve-service --> ts-notification-service"},{"source":"ts-admin-user-service","target":"ts-user-service","requests":[{"type":"PUT","argument":"@RequestBody UserDto user, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.updateUser"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getAllUser"},{"type":"DELETE","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.deleteUserById"}],"name":"ts-admin-user-service --> ts-user-service"},{"source":"ts-preserve-other-service","target":"ts-security-service","requests":[{"type":"GET","argument":"@PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"security.controller.SecurityController.check"}],"name":"ts-preserve-other-service --> ts-security-service"},{"source":"ts-travel-plan-service","target":"ts-route-plan-service","requests":[{"type":"GET","argument":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"plan.controller.RoutePlanController.getCheapestRoutes"},{"type":"GET","argument":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"plan.controller.RoutePlanController.getMinStopStations"},{"type":"GET","argument":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"plan.controller.RoutePlanController.getQuickestRoutes"}],"name":"ts-travel-plan-service --> ts-route-plan-service"},{"source":"ts-travel-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"},{"type":"GET","argument":"@PathVariable String name, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForStationId"}],"name":"ts-travel-service --> ts-ticketinfo-service"},{"source":"ts-route-plan-service","target":"ts-travel2-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.queryInfo"},{"type":"GET","argument":"@RequestBody ArrayList<String> routeIds, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.getTripsByRouteId"}],"name":"ts-route-plan-service --> ts-travel2-service"},{"source":"ts-inside-payment-service","target":"ts-order-other-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.modifyOrder"}],"name":"ts-inside-payment-service --> ts-order-other-service"},{"source":"ts-preserve-other-service","target":"ts-travel2-service","requests":[{"type":"POST","argument":"@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.getTripAllDetailInfo"}],"name":"ts-preserve-other-service --> ts-travel2-service"},{"source":"ts-order-other-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForNameBatch"}],"name":"ts-order-other-service --> ts-station-service"},{"source":"ts-travel-plan-service","target":"ts-travel2-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.queryInfo"}],"name":"ts-travel-plan-service --> ts-travel2-service"},{"source":"ts-preserve-service","target":"ts-food-service","requests":[{"type":"POST","argument":"@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"foodsearch.controller.FoodController.createFoodOrder"}],"name":"ts-preserve-service --> ts-food-service"},{"source":"ts-route-plan-service","target":"ts-travel-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.queryInfo"},{"type":"GET","argument":"@RequestBody ArrayList<String> routeIds, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getTripsByRouteId"}],"name":"ts-route-plan-service --> ts-travel-service"},{"source":"ts-food-service","target":"ts-travel-service","requests":[{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getRouteByTripId"}],"name":"ts-food-service --> ts-travel-service"},{"source":"ts-preserve-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-preserve-service --> ts-station-service"},{"source":"ts-food-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-food-service --> ts-station-service"},{"source":"ts-preserve-other-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-preserve-other-service --> ts-station-service"},{"source":"ts-security-service","target":"ts-order-service","requests":[{"type":"GET","argument":"@PathVariable Date checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.securityInfoCheck"}],"name":"ts-security-service --> ts-order-service"},{"source":"ts-travel2-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"},{"type":"GET","argument":"@PathVariable String name, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForStationId"}],"name":"ts-travel2-service --> ts-ticketinfo-service"},{"source":"ts-travel2-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.getLeftTicketOfInterval"}],"name":"ts-travel2-service --> ts-seat-service"},{"source":"ts-seat-service","target":"ts-order-service","requests":[{"type":"GET","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.getTicketListByDateAndTripId"}],"name":"ts-seat-service --> ts-order-service"},{"source":"ts-preserve-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"}],"name":"ts-preserve-service --> ts-ticketinfo-service"},{"source":"ts-preserve-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.create"}],"name":"ts-preserve-service --> ts-seat-service"},{"source":"ts-security-service","target":"ts-order-other-service","requests":[{"type":"GET","argument":"@PathVariable Date checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.securityInfoCheck"}],"name":"ts-security-service --> ts-order-other-service"},{"source":"ts-basic-service","target":"ts-route-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"}],"name":"ts-basic-service --> ts-route-service"},{"source":"ts-seat-service","target":"ts-travel2-service","requests":[{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.getRouteByTripId"},{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.getTrainTypeByTripId"}],"name":"ts-seat-service --> ts-travel2-service"},{"source":"ts-order-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForNameBatch"}],"name":"ts-order-service --> ts-station-service"},{"source":"ts-preserve-service","target":"ts-contacts-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.getContactsByContactsId"}],"name":"ts-preserve-service --> ts-contacts-service"},{"source":"ts-cancel-service","target":"ts-inside-payment-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"inside_payment.controller.InsidePaymentController.drawBack"}],"name":"ts-cancel-service --> ts-inside-payment-service"},{"source":"ts-rebook-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationIdForName#quot;) String stationId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryById"}],"name":"ts-rebook-service --> ts-station-service"},{"source":"ts-admin-travel-service","target":"ts-travel2-service","requests":[{"type":"PUT","argument":"@RequestBody TravelInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.updateTrip"},{"type":"POST","argument":"@RequestBody TravelInfo routeIds, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"travel2.controller.Travel2Controller.createTrip"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.adminQueryAll"},{"type":"DELETE","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.deleteTrip"}],"name":"ts-admin-travel-service --> ts-travel2-service"},{"source":"ts-preserve-other-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.create"}],"name":"ts-preserve-other-service --> ts-seat-service"},{"source":"ts-travel-service","target":"ts-order-service","requests":[{"type":"GET","argument":"@PathVariable Date travelDate, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.calculateSoldTicket"}],"name":"ts-travel-service --> ts-order-service"},{"source":"ts-preserve-service","target":"ts-consign-service","requests":[{"type":"POST","argument":"@RequestBody Consign request, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"consign.controller.ConsignController.insertConsign"}],"name":"ts-preserve-service --> ts-consign-service"},{"source":"ts-admin-route-service","target":"ts-route-service","requests":[{"type":"POST","argument":"@RequestBody RouteInfo createAndModifyRouteInfo, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"route.controller.RouteController.createAndModifyRoute"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryAll"},{"type":"DELETE","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.deleteRoute"}],"name":"ts-admin-route-service --> ts-route-service"},{"source":"ts-preserve-service","target":"ts-order-service","requests":[{"type":"POST","argument":"@RequestBody Order createOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.createNewOrder"}],"name":"ts-preserve-service --> ts-order-service"},{"source":"ts-inside-payment-service","target":"ts-order-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.modifyOrder"}],"name":"ts-inside-payment-service --> ts-order-service"},{"source":"ts-preserve-service","target":"ts-security-service","requests":[{"type":"GET","argument":"@PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"security.controller.SecurityController.check"}],"name":"ts-preserve-service --> ts-security-service"},{"source":"ts-admin-order-service","target":"ts-order-service","requests":[{"type":"POST","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.addcreateNewOrder"},{"type":"PUT","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.updateOrder"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.findAllOrder"},{"type":"DELETE","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.deleteOrder"}],"name":"ts-admin-order-service --> ts-order-service"},{"source":"ts-travel-service","target":"ts-route-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"}],"name":"ts-travel-service --> ts-route-service"},{"source":"ts-execute-service","target":"ts-order-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.modifyOrder"},{"type":"GET","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.getOrderById"}],"name":"ts-execute-service --> ts-order-service"},{"source":"ts-preserve-other-service","target":"ts-contacts-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.getContactsByContactsId"}],"name":"ts-preserve-other-service --> ts-contacts-service"},{"source":"ts-travel-service","target":"ts-train-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.retrieve"}],"name":"ts-travel-service --> ts-train-service"},{"source":"ts-travel2-service","target":"ts-train-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.retrieve"}],"name":"ts-travel2-service --> ts-train-service"},{"source":"ts-basic-service","target":"ts-train-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.retrieve"}],"name":"ts-basic-service --> ts-train-service"},{"source":"ts-basic-service","target":"ts-price-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @PathVariable String trainType, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.query"}],"name":"ts-basic-service --> ts-price-service"},{"source":"ts-seat-service","target":"ts-travel-service","requests":[{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getRouteByTripId"},{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getTrainTypeByTripId"}],"name":"ts-seat-service --> ts-travel-service"},{"source":"ts-preserve-service","target":"ts-assurance-service","requests":[{"type":"POST","argument":"@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"assurance.controller.AssuranceController.createNewAssurance"}],"name":"ts-preserve-service --> ts-assurance-service"},{"source":"ts-preserve-other-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"}],"name":"ts-preserve-other-service --> ts-ticketinfo-service"},{"source":"ts-preserve-other-service","target":"ts-notification-service","requests":[{"type":"POST","argument":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"notification.controller.NotificationController.preserve_success"}],"name":"ts-preserve-other-service --> ts-notification-service"},{"source":"ts-seat-service","target":"ts-config-service","requests":[{"type":"GET","argument":"@PathVariable String configName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.retrieve"}],"name":"ts-seat-service --> ts-config-service"},{"source":"ts-admin-basic-info-service","target":"ts-contacts-service","requests":[{"type":"POST","argument":"@RequestBody Contacts aci, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"contacts.controller.ContactsController.createNewContactsAdmin"},{"type":"PUT","argument":"@RequestBody Contacts info, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.modifyContacts"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.getAllContacts"},{"type":"DELETE","argument":"@PathVariable String contactsId, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.deleteContacts"}],"name":"ts-admin-basic-info-service --> ts-contacts-service"},{"source":"ts-consign-service","target":"ts-consign-price-service","requests":[{"type":"GET","argument":"@PathVariable String weight, @PathVariable String isWithinRegion, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"consignprice.controller.ConsignPriceController.getPriceByWeightAndRegion"}],"name":"ts-consign-service --> ts-consign-price-service"},{"source":"ts-auth-service","target":"ts-verification-code-service","requests":[{"type":"GET","argument":"@PathVariable String verifyCode, HttpServletRequest request, HttpServletResponse response, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"verifycode.controller.VerifyCodeController.verifyCode"}],"name":"ts-auth-service --> ts-verification-code-service"},{"source":"ts-preserve-service","target":"ts-travel-service","requests":[{"type":"GET","argument":"@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getTripAllDetailInfo"}],"name":"ts-preserve-service --> ts-travel-service"},{"source":"ts-food-service","target":"ts-food-map-service","requests":[{"type":"GET","argument":"@RequestBody List<String> stationIdList","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"food.controller.FoodStoreController.getFoodStoresByStationIds"},{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"food.controller.TrainFoodController.getTrainFoodOfTrip"}],"name":"ts-food-service --> ts-food-map-service"}]', '2023-05-02 03:26:25.173000', '[{"nodeName":"ts-rebook-service","nodeType":"service","patterns":[],"contributor":"C","latency":39.0,"cpu":60.0,"ram":35.0,"disk":65.0,"x":-20.291727114611042,"y":225.45681201266171,"z":-17.117618253143245},{"nodeName":"ts-admin-order-service","nodeType":"service","patterns":[],"contributor":"D","latency":18.0,"cpu":70.0,"ram":30.0,"disk":50.0,"x":-99.86874097826957,"y":142.60148269025896,"z":212.54720740324396},{"nodeName":"ts-admin-basic-info-service","nodeType":"service","patterns":[],"contributor":"E","latency":46.0,"cpu":90.0,"ram":100.0,"disk":20.0,"x":121.32008197422847,"y":-9.319139805345817,"z":-236.2819628848429},{"nodeName":"ts-consign-price-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"A","latency":38.0,"cpu":90.0,"ram":20.0,"disk":65.0,"x":-228.10825337415477,"y":-219.2386552006152,"z":-124.59124470740896},{"nodeName":"ts-cancel-service","nodeType":"service","patterns":[],"contributor":"D","latency":34.0,"cpu":20.0,"ram":45.0,"disk":80.0,"x":-221.29056353883803,"y":58.54416352680268,"z":131.52358799271036},{"nodeName":"ts-consign-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"D","latency":53.0,"cpu":20.0,"ram":55.0,"disk":95.0,"x":-143.3502943332091,"y":-171.34849273574147,"z":-53.108108178583514},{"nodeName":"ts-price-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"E","latency":76.0,"cpu":60.0,"ram":25.0,"disk":20.0,"x":215.19080696317454,"y":-99.1904361962517,"z":-277.45450181302874},{"nodeName":"ts-verification-code-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"E","latency":75.0,"cpu":80.0,"ram":25.0,"disk":50.0,"x":-474.22953704190934,"y":-336.85421923764363,"z":25.740089859098866},{"nodeName":"ts-order-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":8}],"contributor":"E","latency":52.0,"cpu":10.0,"ram":50.0,"disk":35.0,"x":-18.216530113589005,"y":100.87798973164469,"z":142.77096700274765},{"nodeName":"ts-basic-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"C","latency":87.0,"cpu":80.0,"ram":15.0,"disk":35.0,"x":246.5500729000928,"y":-91.71135117602425,"z":-142.47976694843987},{"nodeName":"ts-train-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":4}],"contributor":"A","latency":67.0,"cpu":50.0,"ram":30.0,"disk":95.0,"x":243.6839192610687,"y":11.470651170796799,"z":-120.72257000496936},{"nodeName":"ts-admin-travel-service","nodeType":"service","patterns":[],"contributor":"A","latency":94.0,"cpu":70.0,"ram":80.0,"disk":20.0,"x":270.0756907965189,"y":47.3583812531554,"z":117.6617608329097},{"nodeName":"ts-route-plan-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"B","latency":15.0,"cpu":80.0,"ram":85.0,"disk":95.0,"x":291.19108702414775,"y":122.62582172379778,"z":-5.379232595169569},{"nodeName":"ts-auth-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"D","latency":36.0,"cpu":50.0,"ram":80.0,"disk":35.0,"x":-385.10304172006306,"y":-262.55148422179076,"z":42.424384644994454},{"nodeName":"ts-preserve-other-service","nodeType":"service","patterns":[],"contributor":"E","latency":39.0,"cpu":60.0,"ram":75.0,"disk":80.0,"x":-70.70383914948856,"y":-63.92788127025934,"z":-3.643908953690888},{"nodeName":"ts-food-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"B","latency":83.0,"cpu":70.0,"ram":90.0,"disk":35.0,"x":-1.3595307591745365,"y":-1.18925910776768,"z":-84.94840485232419},{"nodeName":"ts-seat-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":6},{"type":"Cyclic Dependency","problemNodes":["ts-travel2-service","ts-travel-service","ts-seat-service"],"id":0}],"contributor":"D","latency":24.0,"cpu":100.0,"ram":95.0,"disk":80.0,"x":76.09327404051466,"y":141.27034440353108,"z":8.764161466057242},{"nodeName":"ts-notification-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":3}],"contributor":"B","latency":51.0,"cpu":30.0,"ram":60.0,"disk":50.0,"x":-169.79075038663115,"y":-65.56201282063618,"z":83.1135132114633},{"nodeName":"ts-preserve-service","nodeType":"service","patterns":[],"contributor":"A","latency":36.0,"cpu":80.0,"ram":95.0,"disk":65.0,"x":-22.029138024951102,"y":-90.76864778310919,"z":44.12515384649667},{"nodeName":"ts-user-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":4}],"contributor":"B","latency":17.0,"cpu":90.0,"ram":10.0,"disk":65.0,"x":-249.1795415271831,"y":-148.54813803910653,"z":66.83734632261583},{"nodeName":"ts-station-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":10}],"contributor":"B","latency":25.0,"cpu":40.0,"ram":35.0,"disk":5.0,"x":83.983216020485,"y":66.70713159390664,"z":-60.92276833466229},{"nodeName":"ts-admin-route-service","nodeType":"service","patterns":[],"contributor":"C","latency":85.0,"cpu":10.0,"ram":60.0,"disk":5.0,"x":456.96821292833533,"y":0.7403213717080768,"z":-50.8514361530892},{"nodeName":"ts-inside-payment-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"C","latency":14.0,"cpu":40.0,"ram":65.0,"disk":65.0,"x":-161.5456471628188,"y":232.1852441376993,"z":96.90296044562241},{"nodeName":"ts-food-map-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"E","latency":58.0,"cpu":40.0,"ram":75.0,"disk":65.0,"x":-68.62913518368212,"y":15.277590871361026,"z":-184.49090466431673},{"nodeName":"ts-travel-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":6},{"type":"Cyclic Dependency","problemNodes":["ts-travel2-service","ts-travel-service","ts-seat-service"],"id":0}],"contributor":"B","latency":10.0,"cpu":100.0,"ram":15.0,"disk":35.0,"x":184.05549103554665,"y":66.9765752280713,"z":21.08563475231082},{"nodeName":"ts-config-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"E","latency":53.0,"cpu":30.0,"ram":50.0,"disk":20.0,"x":94.15544188963736,"y":126.16389286286672,"z":-168.20615919561013},{"nodeName":"ts-execute-service","nodeType":"service","patterns":[],"contributor":"B","latency":83.0,"cpu":20.0,"ram":65.0,"disk":80.0,"x":-44.56221635658511,"y":200.48352263746384,"z":185.60170592099135},{"nodeName":"ts-route-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":5}],"contributor":"C","latency":86.0,"cpu":30.0,"ram":40.0,"disk":20.0,"x":352.3527572871981,"y":4.8280872840504525,"z":-22.51252985478345},{"nodeName":"ts-security-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"A","latency":37.0,"cpu":30.0,"ram":70.0,"disk":20.0,"x":-69.85549318265923,"y":-20.050197505517975,"z":140.64678715766087},{"nodeName":"ts-travel2-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":5},{"type":"Cyclic Dependency","problemNodes":["ts-travel2-service","ts-travel-service","ts-seat-service"],"id":0}],"contributor":"D","latency":47.0,"cpu":50.0,"ram":70.0,"disk":35.0,"x":192.52820721863418,"y":17.935330604203696,"z":47.2099143653651},{"nodeName":"ts-admin-user-service","nodeType":"service","patterns":[],"contributor":"A","latency":10.0,"cpu":100.0,"ram":5.0,"disk":50.0,"x":-340.30577472271244,"y":-200.57140043688682,"z":96.88401147098615},{"nodeName":"ts-contacts-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":3}],"contributor":"A","latency":14.0,"cpu":40.0,"ram":45.0,"disk":80.0,"x":-1.6916571932301396,"y":-117.77049791984848,"z":-114.65979846085324},{"nodeName":"ts-travel-plan-service","nodeType":"service","patterns":[],"contributor":"C","latency":54.0,"cpu":90.0,"ram":90.0,"disk":5.0,"x":202.57251940836804,"y":151.5885497575095,"z":-41.012474733953866},{"nodeName":"ts-ticketinfo-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":5}],"contributor":"D","latency":18.0,"cpu":70.0,"ram":20.0,"disk":80.0,"x":141.14427554659326,"y":-83.11369242609477,"z":0.8498504961915604},{"nodeName":"ts-order-other-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":8}],"contributor":"A","latency":74.0,"cpu":20.0,"ram":55.0,"disk":65.0,"x":-76.39224174838506,"y":118.31362497760897,"z":87.20752174831328},{"nodeName":"ts-assurance-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"C","latency":14.0,"cpu":60.0,"ram":85.0,"disk":50.0,"x":-68.03141039029454,"y":-190.29395123977483,"z":41.94228593664938},{"nodeName":"ts-payment-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"B","latency":19.0,"cpu":50.0,"ram":40.0,"disk":35.0,"x":-233.08212651939044,"y":321.206746827996,"z":118.14821672839444}]');
INSERT INTO msgraph.graphs (instance_id, create_date, git_commit_id, graph_name, links, modify_date, nodes) VALUES (53, '2023-05-02 03:14:55.412000', 'a8c412', 'test', '[{"source":"ts-preserve-other-service","target":"ts-food-service","requests":[{"type":"POST","argument":"@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"foodsearch.controller.FoodController.createFoodOrder"}],"name":"ts-preserve-other-service --> ts-food-service"},{"source":"ts-rebook-service","target":"ts-inside-payment-service","requests":[{"type":"POST","argument":"@RequestBody PaymentInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"inside_payment.controller.InsidePaymentController.payDifference"},{"type":"GET","argument":"@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"inside_payment.controller.InsidePaymentController.drawBack"}],"name":"ts-rebook-service --> ts-inside-payment-service"},{"source":"ts-travel-plan-service","target":"ts-route-plan-service","requests":[{"type":"GET","argument":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"plan.controller.RoutePlanController.getCheapestRoutes"},{"type":"GET","argument":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"plan.controller.RoutePlanController.getMinStopStations"},{"type":"GET","argument":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"plan.controller.RoutePlanController.getQuickestRoutes"}],"name":"ts-travel-plan-service --> ts-route-plan-service"},{"source":"ts-execute-service","target":"ts-order-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.modifyOrder"},{"type":"GET","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.getOrderById"}],"name":"ts-execute-service --> ts-order-service"},{"source":"ts-order-other-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForNameBatch"}],"name":"ts-order-other-service --> ts-station-service"},{"source":"ts-order-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForNameBatch"}],"name":"ts-order-service --> ts-station-service"},{"source":"ts-inside-payment-service","target":"ts-order-other-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.modifyOrder"}],"name":"ts-inside-payment-service --> ts-order-other-service"},{"source":"ts-travel2-service","target":"ts-train-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.retrieve"}],"name":"ts-travel2-service --> ts-train-service"},{"source":"ts-travel-plan-service","target":"ts-seat-service","requests":[{"type":"GET","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.getLeftTicketOfInterval"}],"name":"ts-travel-plan-service --> ts-seat-service"},{"source":"ts-travel-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"},{"type":"GET","argument":"@PathVariable String name, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForStationId"}],"name":"ts-travel-service --> ts-ticketinfo-service"},{"source":"ts-rebook-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.create"}],"name":"ts-rebook-service --> ts-seat-service"},{"source":"ts-cancel-service","target":"ts-order-other-service","requests":[{"type":"PUT","argument":"@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.saveOrderInfo"},{"type":"GET","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.getOrderById"}],"name":"ts-cancel-service --> ts-order-other-service"},{"source":"ts-ticketinfo-service","target":"ts-basic-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.BasicController.queryForTravel"},{"type":"GET","argument":"@PathVariable String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.BasicController.queryForStationId"}],"name":"ts-ticketinfo-service --> ts-basic-service"},{"source":"ts-preserve-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"}],"name":"ts-preserve-service --> ts-ticketinfo-service"},{"source":"ts-cancel-service","target":"ts-order-service","requests":[{"type":"PUT","argument":"@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.saveOrderInfo"},{"type":"GET","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.getOrderById"}],"name":"ts-cancel-service --> ts-order-service"},{"source":"ts-route-plan-service","target":"ts-travel2-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.queryInfo"},{"type":"GET","argument":"@RequestBody ArrayList<String> routeIds, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.getTripsByRouteId"}],"name":"ts-route-plan-service --> ts-travel2-service"},{"source":"ts-basic-service","target":"ts-train-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.retrieve"}],"name":"ts-basic-service --> ts-train-service"},{"source":"ts-cancel-service","target":"ts-user-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getUserByUserId"}],"name":"ts-cancel-service --> ts-user-service"},{"source":"ts-travel-plan-service","target":"ts-travel-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.queryInfo"}],"name":"ts-travel-plan-service --> ts-travel-service"},{"source":"ts-preserve-other-service","target":"ts-security-service","requests":[{"type":"GET","argument":"@PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"security.controller.SecurityController.check"}],"name":"ts-preserve-other-service --> ts-security-service"},{"source":"ts-execute-service","target":"ts-order-other-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.modifyOrder"},{"type":"GET","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.getOrderById"}],"name":"ts-execute-service --> ts-order-other-service"},{"source":"ts-seat-service","target":"ts-config-service","requests":[{"type":"GET","argument":"@PathVariable String configName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.retrieve"}],"name":"ts-seat-service --> ts-config-service"},{"source":"ts-preserve-other-service","target":"ts-travel2-service","requests":[{"type":"POST","argument":"@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.getTripAllDetailInfo"}],"name":"ts-preserve-other-service --> ts-travel2-service"},{"source":"ts-preserve-other-service","target":"ts-notification-service","requests":[{"type":"POST","argument":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"notification.controller.NotificationController.preserve_success"}],"name":"ts-preserve-other-service --> ts-notification-service"},{"source":"ts-route-plan-service","target":"ts-travel-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.queryInfo"},{"type":"GET","argument":"@RequestBody ArrayList<String> routeIds, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getTripsByRouteId"}],"name":"ts-route-plan-service --> ts-travel-service"},{"source":"ts-preserve-service","target":"ts-contacts-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.getContactsByContactsId"}],"name":"ts-preserve-service --> ts-contacts-service"},{"source":"ts-inside-payment-service","target":"ts-order-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.modifyOrder"}],"name":"ts-inside-payment-service --> ts-order-service"},{"source":"ts-preserve-other-service","target":"ts-contacts-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.getContactsByContactsId"}],"name":"ts-preserve-other-service --> ts-contacts-service"},{"source":"ts-cancel-service","target":"ts-inside-payment-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"inside_payment.controller.InsidePaymentController.drawBack"}],"name":"ts-cancel-service --> ts-inside-payment-service"},{"source":"ts-admin-basic-info-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody Station station, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"fdse.microservice.controller.StationController.create"},{"type":"PUT","argument":"@RequestBody Station station, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.update"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.query"},{"type":"DELETE","argument":"@RequestBody Station station, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"fdse.microservice.controller.StationController.delete"}],"name":"ts-admin-basic-info-service --> ts-station-service"},{"source":"ts-travel-plan-service","target":"ts-ticketinfo-service","requests":[{"type":"GET","argument":"@PathVariable String name, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForStationId"}],"name":"ts-travel-plan-service --> ts-ticketinfo-service"},{"source":"ts-admin-travel-service","target":"ts-travel-service","requests":[{"type":"PUT","argument":"@RequestBody TravelInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.updateTrip"},{"type":"POST","argument":"@RequestBody TravelInfo routeIds, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"travel.controller.TravelController.createTrip"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.adminQueryAll"},{"type":"DELETE","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.deleteTrip"}],"name":"ts-admin-travel-service --> ts-travel-service"},{"source":"ts-preserve-service","target":"ts-consign-service","requests":[{"type":"POST","argument":"@RequestBody Consign request, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"consign.controller.ConsignController.insertConsign"}],"name":"ts-preserve-service --> ts-consign-service"},{"source":"ts-preserve-other-service","target":"ts-user-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getUserByUserId"}],"name":"ts-preserve-other-service --> ts-user-service"},{"source":"ts-preserve-other-service","target":"ts-assurance-service","requests":[{"type":"GET","argument":"@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"assurance.controller.AssuranceController.createNewAssurance"}],"name":"ts-preserve-other-service --> ts-assurance-service"},{"source":"ts-admin-basic-info-service","target":"ts-price-service","requests":[{"type":"POST","argument":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"price.controller.PriceController.create"},{"type":"PUT","argument":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.update"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.queryAll"},{"type":"DELETE","argument":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.delete"}],"name":"ts-admin-basic-info-service --> ts-price-service"},{"source":"ts-preserve-other-service","target":"ts-consign-service","requests":[{"type":"POST","argument":"@RequestBody Consign request, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"consign.controller.ConsignController.insertConsign"}],"name":"ts-preserve-other-service --> ts-consign-service"},{"source":"ts-preserve-other-service","target":"ts-order-other-service","requests":[{"type":"POST","argument":"@RequestBody Order createOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.createNewOrder"}],"name":"ts-preserve-other-service --> ts-order-other-service"},{"source":"ts-admin-basic-info-service","target":"ts-contacts-service","requests":[{"type":"POST","argument":"@RequestBody Contacts aci, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"contacts.controller.ContactsController.createNewContactsAdmin"},{"type":"PUT","argument":"@RequestBody Contacts info, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.modifyContacts"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.getAllContacts"},{"type":"DELETE","argument":"@PathVariable String contactsId, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.deleteContacts"}],"name":"ts-admin-basic-info-service --> ts-contacts-service"},{"source":"ts-preserve-other-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-preserve-other-service --> ts-station-service"},{"source":"ts-travel-service","target":"ts-train-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.retrieve"}],"name":"ts-travel-service --> ts-train-service"},{"source":"ts-route-plan-service","target":"ts-route-service","requests":[{"type":"POST","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"},{"type":"GET","argument":"@PathVariable String startId, @PathVariable String terminalId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryByStartAndTerminal"}],"name":"ts-route-plan-service --> ts-route-service"},{"source":"ts-basic-service","target":"ts-price-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @PathVariable String trainType, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.query"}],"name":"ts-basic-service --> ts-price-service"},{"source":"ts-preserve-service","target":"ts-assurance-service","requests":[{"type":"POST","argument":"@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"assurance.controller.AssuranceController.createNewAssurance"}],"name":"ts-preserve-service --> ts-assurance-service"},{"source":"ts-basic-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-basic-service --> ts-station-service"},{"source":"ts-consign-service","target":"ts-consign-price-service","requests":[{"type":"GET","argument":"@PathVariable String weight, @PathVariable String isWithinRegion, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"consignprice.controller.ConsignPriceController.getPriceByWeightAndRegion"}],"name":"ts-consign-service --> ts-consign-price-service"},{"source":"ts-preserve-other-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.create"}],"name":"ts-preserve-other-service --> ts-seat-service"},{"source":"ts-food-service","target":"ts-travel-service","requests":[{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getRouteByTripId"}],"name":"ts-food-service --> ts-travel-service"},{"source":"ts-preserve-service","target":"ts-user-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getUserByUserId"}],"name":"ts-preserve-service --> ts-user-service"},{"source":"ts-travel-plan-service","target":"ts-travel2-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.queryInfo"}],"name":"ts-travel-plan-service --> ts-travel2-service"},{"source":"ts-admin-order-service","target":"ts-order-other-service","requests":[{"type":"POST","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.addcreateNewOrder"},{"type":"PUT","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.updateOrder"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.findAllOrder"},{"type":"DELETE","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.deleteOrder"}],"name":"ts-admin-order-service --> ts-order-other-service"},{"source":"ts-travel-service","target":"ts-order-service","requests":[{"type":"GET","argument":"@PathVariable Date travelDate, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.calculateSoldTicket"}],"name":"ts-travel-service --> ts-order-service"},{"source":"ts-cancel-service","target":"ts-notification-service","requests":[{"type":"POST","argument":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"notification.controller.NotificationController.order_cancel_success"}],"name":"ts-cancel-service --> ts-notification-service"},{"source":"ts-admin-travel-service","target":"ts-travel2-service","requests":[{"type":"PUT","argument":"@RequestBody TravelInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.updateTrip"},{"type":"POST","argument":"@RequestBody TravelInfo routeIds, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"travel2.controller.Travel2Controller.createTrip"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.adminQueryAll"},{"type":"DELETE","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.deleteTrip"}],"name":"ts-admin-travel-service --> ts-travel2-service"},{"source":"ts-rebook-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationIdForName#quot;) String stationId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryById"}],"name":"ts-rebook-service --> ts-station-service"},{"source":"ts-travel-service","target":"ts-route-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"}],"name":"ts-travel-service --> ts-route-service"},{"source":"ts-inside-payment-service","target":"ts-payment-service","requests":[{"type":"POST","argument":"@RequestBody Payment info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"com.trainticket.controller.PaymentController.pay"}],"name":"ts-inside-payment-service --> ts-payment-service"},{"source":"ts-route-plan-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-route-plan-service --> ts-station-service"},{"source":"ts-seat-service","target":"ts-order-other-service","requests":[{"type":"GET","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.getTicketListByDateAndTripId"}],"name":"ts-seat-service --> ts-order-other-service"},{"source":"ts-seat-service","target":"ts-order-service","requests":[{"type":"GET","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.getTicketListByDateAndTripId"}],"name":"ts-seat-service --> ts-order-service"},{"source":"ts-food-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-food-service --> ts-station-service"},{"source":"ts-preserve-service","target":"ts-food-service","requests":[{"type":"POST","argument":"@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"foodsearch.controller.FoodController.createFoodOrder"}],"name":"ts-preserve-service --> ts-food-service"},{"source":"ts-auth-service","target":"ts-verification-code-service","requests":[{"type":"GET","argument":"@PathVariable String verifyCode, HttpServletRequest request, HttpServletResponse response, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"verifycode.controller.VerifyCodeController.verifyCode"}],"name":"ts-auth-service --> ts-verification-code-service"},{"source":"ts-admin-order-service","target":"ts-order-service","requests":[{"type":"POST","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.addcreateNewOrder"},{"type":"PUT","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.updateOrder"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.findAllOrder"},{"type":"DELETE","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.deleteOrder"}],"name":"ts-admin-order-service --> ts-order-service"},{"source":"ts-preserve-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.create"}],"name":"ts-preserve-service --> ts-seat-service"},{"source":"ts-admin-basic-info-service","target":"ts-config-service","requests":[{"type":"POST","argument":"@RequestBody Config info, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"config.controller.ConfigController.createConfig"},{"type":"PUT","argument":"@RequestBody Config info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.updateConfig"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.queryAll"},{"type":"DELETE","argument":"@PathVariable String configName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.deleteConfig"}],"name":"ts-admin-basic-info-service --> ts-config-service"},{"source":"ts-basic-service","target":"ts-route-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"}],"name":"ts-basic-service --> ts-route-service"},{"source":"ts-preserve-service","target":"ts-security-service","requests":[{"type":"GET","argument":"@PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"security.controller.SecurityController.check"}],"name":"ts-preserve-service --> ts-security-service"},{"source":"ts-security-service","target":"ts-order-other-service","requests":[{"type":"GET","argument":"@PathVariable Date checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.securityInfoCheck"}],"name":"ts-security-service --> ts-order-other-service"},{"source":"ts-preserve-other-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"}],"name":"ts-preserve-other-service --> ts-ticketinfo-service"},{"source":"ts-preserve-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-preserve-service --> ts-station-service"},{"source":"ts-admin-user-service","target":"ts-user-service","requests":[{"type":"PUT","argument":"@RequestBody UserDto user, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.updateUser"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getAllUser"},{"type":"DELETE","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.deleteUserById"}],"name":"ts-admin-user-service --> ts-user-service"},{"source":"ts-preserve-service","target":"ts-travel-service","requests":[{"type":"GET","argument":"@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getTripAllDetailInfo"}],"name":"ts-preserve-service --> ts-travel-service"},{"source":"ts-admin-basic-info-service","target":"ts-train-service","requests":[{"type":"POST","argument":"@RequestBody TrainType trainType, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.create"},{"type":"PUT","argument":"@RequestBody TrainType trainType, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.update"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.query"},{"type":"DELETE","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.delete"}],"name":"ts-admin-basic-info-service --> ts-train-service"},{"source":"ts-travel2-service","target":"ts-route-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"}],"name":"ts-travel2-service --> ts-route-service"},{"source":"ts-preserve-service","target":"ts-notification-service","requests":[{"type":"POST","argument":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"notification.controller.NotificationController.preserve_success"}],"name":"ts-preserve-service --> ts-notification-service"},{"source":"ts-travel2-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"},{"type":"GET","argument":"@PathVariable String name, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForStationId"}],"name":"ts-travel2-service --> ts-ticketinfo-service"},{"source":"ts-food-service","target":"ts-food-map-service","requests":[{"type":"GET","argument":"@RequestBody List<String> stationIdList","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"food.controller.FoodStoreController.getFoodStoresByStationIds"},{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"food.controller.TrainFoodController.getTrainFoodOfTrip"}],"name":"ts-food-service --> ts-food-map-service"},{"source":"ts-admin-route-service","target":"ts-route-service","requests":[{"type":"POST","argument":"@RequestBody RouteInfo createAndModifyRouteInfo, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"route.controller.RouteController.createAndModifyRoute"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryAll"},{"type":"DELETE","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.deleteRoute"}],"name":"ts-admin-route-service --> ts-route-service"},{"source":"ts-travel2-service","target":"ts-order-other-service","requests":[{"type":"GET","argument":"@PathVariable Date travelDate, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.calculateSoldTicket"}],"name":"ts-travel2-service --> ts-order-other-service"},{"source":"ts-travel-plan-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForNameBatch"}],"name":"ts-travel-plan-service --> ts-station-service"},{"source":"ts-security-service","target":"ts-order-service","requests":[{"type":"GET","argument":"@PathVariable Date checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.securityInfoCheck"}],"name":"ts-security-service --> ts-order-service"},{"source":"ts-user-service","target":"ts-auth-service","requests":[{"type":"POST","argument":"@RequestBody AuthDto authDto","msReturn":"HttpEntity<Response>","endpointFunction":"auth.controller.AuthController.createDefaultUser"}],"name":"ts-user-service --> ts-auth-service"},{"source":"ts-preserve-service","target":"ts-order-service","requests":[{"type":"POST","argument":"@RequestBody Order createOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.createNewOrder"}],"name":"ts-preserve-service --> ts-order-service"}]', '2023-05-02 10:06:47.026000', '[{"nodeName":"ts-rebook-service","nodeType":"service","patterns":[],"contributor":"C","latency":39.0,"cpu":60.0,"ram":35.0,"disk":65.0,"x":202.06856794390936,"y":40.44312795581984,"z":110.08520769219524},{"nodeName":"ts-preserve-service","nodeType":"service","patterns":[],"contributor":"A","latency":36.0,"cpu":80.0,"ram":95.0,"disk":65.0,"x":-40.8352105090196,"y":11.349625718967522,"z":-76.38221067109691},{"nodeName":"ts-verification-code-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"E","latency":75.0,"cpu":80.0,"ram":25.0,"disk":50.0,"x":-1.3586385906019667,"y":27.93932026752312,"z":-557.7547202476102},{"nodeName":"ts-assurance-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"C","latency":14.0,"cpu":60.0,"ram":85.0,"disk":50.0,"x":-78.794865822242,"y":-46.213222833161815,"z":-163.09194256630474},{"nodeName":"ts-admin-user-service","nodeType":"service","patterns":[],"contributor":"A","latency":10.0,"cpu":100.0,"ram":5.0,"disk":50.0,"x":64.95517667262018,"y":-17.501852535990785,"z":-380.41301726547374},{"nodeName":"ts-execute-service","nodeType":"service","patterns":[],"contributor":"B","latency":83.0,"cpu":20.0,"ram":65.0,"disk":80.0,"x":234.17679083848822,"y":66.8631057728183,"z":-65.26884606606475},{"nodeName":"ts-travel2-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":4}],"contributor":"D","latency":47.0,"cpu":50.0,"ram":70.0,"disk":35.0,"x":-94.05708890813553,"y":0.6504101001408685,"z":159.8073802473358},{"nodeName":"ts-config-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"E","latency":53.0,"cpu":30.0,"ram":50.0,"disk":20.0,"x":99.04179077059959,"y":-177.3989465824857,"z":152.06924932488192},{"nodeName":"ts-travel-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":5}],"contributor":"B","latency":10.0,"cpu":100.0,"ram":15.0,"disk":35.0,"x":-115.48284846786048,"y":119.5622681369582,"z":136.61312319364262},{"nodeName":"ts-inside-payment-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"C","latency":14.0,"cpu":40.0,"ram":65.0,"disk":65.0,"x":299.65571226044807,"y":116.77866051593718,"z":-27.645880768804403},{"nodeName":"ts-route-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":5}],"contributor":"C","latency":86.0,"cpu":30.0,"ram":40.0,"disk":20.0,"x":-216.37931958913106,"y":44.13393555333319,"z":282.9781756133139},{"nodeName":"ts-ticketinfo-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":5}],"contributor":"D","latency":18.0,"cpu":70.0,"ram":20.0,"disk":80.0,"x":-149.23567716766536,"y":-26.586172209694624,"z":61.543884597877614},{"nodeName":"ts-train-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":4}],"contributor":"A","latency":67.0,"cpu":50.0,"ram":30.0,"disk":95.0,"x":-115.5074841344392,"y":-51.85106056525089,"z":265.5768203838006},{"nodeName":"ts-travel-plan-service","nodeType":"service","patterns":[],"contributor":"C","latency":54.0,"cpu":90.0,"ram":90.0,"disk":5.0,"x":1.4287946352424545,"y":69.70870718267724,"z":201.72890920438746},{"nodeName":"ts-route-plan-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"B","latency":15.0,"cpu":80.0,"ram":85.0,"disk":95.0,"x":-77.71346074738416,"y":96.414245817772,"z":270.91366099791543},{"nodeName":"ts-admin-route-service","nodeType":"service","patterns":[],"contributor":"C","latency":85.0,"cpu":10.0,"ram":60.0,"disk":5.0,"x":-306.9612963355802,"y":59.67048104567692,"z":347.53404499012294},{"nodeName":"ts-user-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":4}],"contributor":"B","latency":17.0,"cpu":90.0,"ram":10.0,"disk":65.0,"x":29.788133726785478,"y":1.5995236868220015,"z":-276.96290890390793},{"nodeName":"ts-security-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"A","latency":37.0,"cpu":30.0,"ram":70.0,"disk":20.0,"x":98.36672941992971,"y":-1.6716692011935734,"z":-97.26855610360975},{"nodeName":"ts-basic-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"C","latency":87.0,"cpu":80.0,"ram":15.0,"disk":35.0,"x":-177.996946849012,"y":-118.22598362245782,"z":217.25190602147327},{"nodeName":"ts-admin-basic-info-service","nodeType":"service","patterns":[],"contributor":"E","latency":46.0,"cpu":90.0,"ram":100.0,"disk":20.0,"x":-29.145305349646193,"y":-194.0053098040126,"z":186.87968121989277},{"nodeName":"ts-admin-travel-service","nodeType":"service","patterns":[],"contributor":"A","latency":94.0,"cpu":70.0,"ram":80.0,"disk":20.0,"x":-202.961220873632,"y":90.53442853026232,"z":177.60077973367882},{"nodeName":"ts-payment-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"B","latency":19.0,"cpu":50.0,"ram":40.0,"disk":35.0,"x":396.01242788088956,"y":171.2581841761852,"z":-41.95696266267982},{"nodeName":"ts-order-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":8}],"contributor":"E","latency":52.0,"cpu":10.0,"ram":50.0,"disk":35.0,"x":128.962192569977,"y":120.86127505549686,"z":-14.91774609962192},{"nodeName":"ts-contacts-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":3}],"contributor":"A","latency":14.0,"cpu":40.0,"ram":45.0,"disk":80.0,"x":-47.71641686087848,"y":-156.65188260206202,"z":0.5884828149161485},{"nodeName":"ts-cancel-service","nodeType":"service","patterns":[],"contributor":"D","latency":34.0,"cpu":20.0,"ram":45.0,"disk":80.0,"x":192.19991722423444,"y":76.08791522207846,"z":-170.9896806762537},{"nodeName":"ts-food-map-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"E","latency":58.0,"cpu":40.0,"ram":75.0,"disk":65.0,"x":-171.74622894635473,"y":161.91094216146254,"z":-53.05183671318569},{"nodeName":"ts-consign-price-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"A","latency":38.0,"cpu":90.0,"ram":20.0,"disk":65.0,"x":-190.87073495909576,"y":-171.2475637393886,"z":-231.61314601197898},{"nodeName":"ts-seat-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":4}],"contributor":"D","latency":24.0,"cpu":100.0,"ram":95.0,"disk":80.0,"x":114.65221252307732,"y":-46.46116750828842,"z":67.63694643979878},{"nodeName":"ts-preserve-other-service","nodeType":"service","patterns":[],"contributor":"E","latency":39.0,"cpu":60.0,"ram":75.0,"disk":80.0,"x":-6.631546660681562,"y":-78.13291082385403,"z":-71.22290597824644},{"nodeName":"ts-station-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":10}],"contributor":"B","latency":25.0,"cpu":40.0,"ram":35.0,"disk":5.0,"x":27.318289937258303,"y":-10.539456366107157,"z":117.58111427719169},{"nodeName":"ts-order-other-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":8}],"contributor":"A","latency":74.0,"cpu":20.0,"ram":55.0,"disk":65.0,"x":188.5993707766935,"y":-20.245008697583515,"z":-16.09332846017032},{"nodeName":"ts-auth-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"D","latency":36.0,"cpu":50.0,"ram":80.0,"disk":35.0,"x":6.641220774614931,"y":20.626222704701686,"z":-443.4403282910783},{"nodeName":"ts-consign-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"D","latency":53.0,"cpu":20.0,"ram":55.0,"disk":95.0,"x":-117.77418505921365,"y":-115.66655520220058,"z":-156.7933322473736},{"nodeName":"ts-food-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"B","latency":83.0,"cpu":70.0,"ram":90.0,"disk":35.0,"x":-97.93555262253966,"y":82.0987052291342,"z":-7.442804351640325},{"nodeName":"ts-notification-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":3}],"contributor":"B","latency":51.0,"cpu":30.0,"ram":60.0,"disk":50.0,"x":51.45053308325003,"y":15.7643375951148,"z":-172.3896344822397},{"nodeName":"ts-price-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"E","latency":76.0,"cpu":60.0,"ram":25.0,"disk":20.0,"x":-140.16980352702916,"y":-243.3799422566371,"z":252.28109202228848},{"nodeName":"ts-admin-order-service","nodeType":"service","patterns":[],"contributor":"D","latency":18.0,"cpu":70.0,"ram":30.0,"disk":50.0,"x":243.96145294127663,"y":81.52353377836312,"z":16.037575186448862}]');
INSERT INTO msgraph.graphs (instance_id, create_date, git_commit_id, graph_name, links, modify_date, nodes) VALUES (102, '2023-05-02 03:25:01.104000', 'c78d12', 'test', '[{"source":"ts-preserve-service","target":"ts-contacts-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.getContactsByContactsId"}],"name":"ts-preserve-service --> ts-contacts-service"},{"source":"ts-travel-plan-service","target":"ts-ticketinfo-service","requests":[{"type":"GET","argument":"@PathVariable String name, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForStationId"}],"name":"ts-travel-plan-service --> ts-ticketinfo-service"},{"source":"ts-food-service","target":"ts-food-map-service","requests":[{"type":"GET","argument":"@RequestBody List<String> stationIdList","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"food.controller.FoodStoreController.getFoodStoresByStationIds"},{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"food.controller.TrainFoodController.getTrainFoodOfTrip"}],"name":"ts-food-service --> ts-food-map-service"},{"source":"ts-preserve-other-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-preserve-other-service --> ts-station-service"},{"source":"ts-travel2-service","target":"ts-order-other-service","requests":[{"type":"GET","argument":"@PathVariable Date travelDate, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.calculateSoldTicket"}],"name":"ts-travel2-service --> ts-order-other-service"},{"source":"ts-route-service","target":"ts-admin-route-service","requests":[{"type":"POST","argument":"@RequestBody RouteInfo createAndModifyRouteInfo, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"route.controller.RouteController.createAndModifyRoute"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryAll"},{"type":"DELETE","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.deleteRoute"}],"name":"ts-route-service --> ts-admin-route-service"},{"source":"ts-admin-order-service","target":"ts-order-other-service","requests":[{"type":"POST","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.addcreateNewOrder"},{"type":"PUT","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.updateOrder"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.findAllOrder"},{"type":"DELETE","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.deleteOrder"}],"name":"ts-admin-order-service --> ts-order-other-service"},{"source":"ts-travel-plan-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForNameBatch"}],"name":"ts-travel-plan-service --> ts-station-service"},{"source":"ts-auth-service","target":"ts-verification-code-service","requests":[{"type":"GET","argument":"@PathVariable String verifyCode, HttpServletRequest request, HttpServletResponse response, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"verifycode.controller.VerifyCodeController.verifyCode"}],"name":"ts-auth-service --> ts-verification-code-service"},{"source":"ts-preserve-service","target":"ts-security-service","requests":[{"type":"GET","argument":"@PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"security.controller.SecurityController.check"}],"name":"ts-preserve-service --> ts-security-service"},{"source":"ts-travel-service","target":"ts-order-service","requests":[{"type":"GET","argument":"@PathVariable Date travelDate, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.calculateSoldTicket"}],"name":"ts-travel-service --> ts-order-service"},{"source":"ts-cancel-service","target":"ts-order-other-service","requests":[{"type":"PUT","argument":"@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.saveOrderInfo"},{"type":"GET","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.getOrderById"}],"name":"ts-cancel-service --> ts-order-other-service"},{"source":"ts-preserve-service","target":"ts-travel-service","requests":[{"type":"GET","argument":"@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getTripAllDetailInfo"}],"name":"ts-preserve-service --> ts-travel-service"},{"source":"ts-preserve-other-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.create"}],"name":"ts-preserve-other-service --> ts-seat-service"},{"source":"ts-preserve-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.create"}],"name":"ts-preserve-service --> ts-seat-service"},{"source":"ts-travel-plan-service","target":"ts-travel-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.queryInfo"}],"name":"ts-travel-plan-service --> ts-travel-service"},{"source":"ts-user-service","target":"ts-auth-service","requests":[{"type":"POST","argument":"@RequestBody AuthDto authDto","msReturn":"HttpEntity<Response>","endpointFunction":"auth.controller.AuthController.createDefaultUser"}],"name":"ts-user-service --> ts-auth-service"},{"source":"ts-ticketinfo-service","target":"ts-basic-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.BasicController.queryForTravel"},{"type":"GET","argument":"@PathVariable String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.BasicController.queryForStationId"}],"name":"ts-ticketinfo-service --> ts-basic-service"},{"source":"ts-preserve-service","target":"ts-assurance-service","requests":[{"type":"POST","argument":"@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"assurance.controller.AssuranceController.createNewAssurance"}],"name":"ts-preserve-service --> ts-assurance-service"},{"source":"ts-preserve-other-service","target":"ts-consign-service","requests":[{"type":"POST","argument":"@RequestBody Consign request, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"consign.controller.ConsignController.insertConsign"}],"name":"ts-preserve-other-service --> ts-consign-service"},{"source":"ts-inside-payment-service","target":"ts-order-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.modifyOrder"}],"name":"ts-inside-payment-service --> ts-order-service"},{"source":"ts-order-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForNameBatch"}],"name":"ts-order-service --> ts-station-service"},{"source":"ts-admin-basic-info-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody Station station, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"fdse.microservice.controller.StationController.create"},{"type":"PUT","argument":"@RequestBody Station station, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.update"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.query"},{"type":"DELETE","argument":"@RequestBody Station station, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"fdse.microservice.controller.StationController.delete"}],"name":"ts-admin-basic-info-service --> ts-station-service"},{"source":"ts-preserve-service","target":"ts-order-service","requests":[{"type":"POST","argument":"@RequestBody Order createOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.createNewOrder"}],"name":"ts-preserve-service --> ts-order-service"},{"source":"ts-travel-plan-service","target":"ts-route-plan-service","requests":[{"type":"GET","argument":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"plan.controller.RoutePlanController.getCheapestRoutes"},{"type":"GET","argument":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"plan.controller.RoutePlanController.getMinStopStations"},{"type":"GET","argument":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"plan.controller.RoutePlanController.getQuickestRoutes"}],"name":"ts-travel-plan-service --> ts-route-plan-service"},{"source":"ts-admin-route-service","target":"ts-route-service","requests":[{"type":"POST","argument":"@RequestBody RouteInfo createAndModifyRouteInfo, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"route.controller.RouteController.createAndModifyRoute"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryAll"},{"type":"DELETE","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.deleteRoute"}],"name":"ts-admin-route-service --> ts-route-service"},{"source":"ts-preserve-service","target":"ts-notification-service","requests":[{"type":"POST","argument":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"notification.controller.NotificationController.preserve_success"}],"name":"ts-preserve-service --> ts-notification-service"},{"source":"ts-preserve-other-service","target":"ts-order-other-service","requests":[{"type":"POST","argument":"@RequestBody Order createOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.createNewOrder"}],"name":"ts-preserve-other-service --> ts-order-other-service"},{"source":"ts-admin-route-service","target":"ts-route-plan-service","requests":[{"type":"POST","argument":"@RequestBody RouteInfo createAndModifyRouteInfo, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"route.controller.RouteController.createAndModifyRoute"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryAll"},{"type":"DELETE","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.deleteRoute"}],"name":"ts-admin-route-service --> ts-route-plan-service"},{"source":"ts-basic-service","target":"ts-price-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @PathVariable String trainType, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.query"}],"name":"ts-basic-service --> ts-price-service"},{"source":"ts-execute-service","target":"ts-order-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.modifyOrder"},{"type":"GET","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.getOrderById"}],"name":"ts-execute-service --> ts-order-service"},{"source":"ts-seat-service","target":"ts-travel2-service","requests":[{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.getRouteByTripId"},{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.getTrainTypeByTripId"}],"name":"ts-seat-service --> ts-travel2-service"},{"source":"ts-preserve-other-service","target":"ts-user-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getUserByUserId"}],"name":"ts-preserve-other-service --> ts-user-service"},{"source":"ts-food-service","target":"ts-travel-service","requests":[{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getRouteByTripId"}],"name":"ts-food-service --> ts-travel-service"},{"source":"ts-admin-order-service","target":"ts-order-service","requests":[{"type":"POST","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.addcreateNewOrder"},{"type":"PUT","argument":"@RequestBody Order order, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.updateOrder"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.findAllOrder"},{"type":"DELETE","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.deleteOrder"}],"name":"ts-admin-order-service --> ts-order-service"},{"source":"ts-security-service","target":"ts-order-other-service","requests":[{"type":"GET","argument":"@PathVariable Date checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.securityInfoCheck"}],"name":"ts-security-service --> ts-order-other-service"},{"source":"ts-preserve-other-service","target":"ts-assurance-service","requests":[{"type":"GET","argument":"@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"assurance.controller.AssuranceController.createNewAssurance"}],"name":"ts-preserve-other-service --> ts-assurance-service"},{"source":"ts-basic-service","target":"ts-train-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.retrieve"}],"name":"ts-basic-service --> ts-train-service"},{"source":"ts-cancel-service","target":"ts-user-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getUserByUserId"}],"name":"ts-cancel-service --> ts-user-service"},{"source":"ts-admin-user-service","target":"ts-user-service","requests":[{"type":"PUT","argument":"@RequestBody UserDto user, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.updateUser"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getAllUser"},{"type":"DELETE","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.deleteUserById"}],"name":"ts-admin-user-service --> ts-user-service"},{"source":"ts-cancel-service","target":"ts-notification-service","requests":[{"type":"POST","argument":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"notification.controller.NotificationController.order_cancel_success"}],"name":"ts-cancel-service --> ts-notification-service"},{"source":"ts-preserve-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-preserve-service --> ts-station-service"},{"source":"ts-route-plan-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-route-plan-service --> ts-station-service"},{"source":"ts-travel-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"},{"type":"GET","argument":"@PathVariable String name, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForStationId"}],"name":"ts-travel-service --> ts-ticketinfo-service"},{"source":"ts-basic-service","target":"ts-route-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"}],"name":"ts-basic-service --> ts-route-service"},{"source":"ts-route-plan-service","target":"ts-travel-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.queryInfo"},{"type":"GET","argument":"@RequestBody ArrayList<String> routeIds, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getTripsByRouteId"}],"name":"ts-route-plan-service --> ts-travel-service"},{"source":"ts-admin-travel-service","target":"ts-travel2-service","requests":[{"type":"PUT","argument":"@RequestBody TravelInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.updateTrip"},{"type":"POST","argument":"@RequestBody TravelInfo routeIds, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"travel2.controller.Travel2Controller.createTrip"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.adminQueryAll"},{"type":"DELETE","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.deleteTrip"}],"name":"ts-admin-travel-service --> ts-travel2-service"},{"source":"ts-seat-service","target":"ts-config-service","requests":[{"type":"GET","argument":"@PathVariable String configName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.retrieve"}],"name":"ts-seat-service --> ts-config-service"},{"source":"ts-travel-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.getLeftTicketOfInterval"}],"name":"ts-travel-service --> ts-seat-service"},{"source":"ts-preserve-service","target":"ts-consign-service","requests":[{"type":"POST","argument":"@RequestBody Consign request, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"consign.controller.ConsignController.insertConsign"}],"name":"ts-preserve-service --> ts-consign-service"},{"source":"ts-travel-service","target":"ts-train-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.retrieve"}],"name":"ts-travel-service --> ts-train-service"},{"source":"ts-travel2-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.getLeftTicketOfInterval"}],"name":"ts-travel2-service --> ts-seat-service"},{"source":"ts-order-other-service","target":"ts-station-service","requests":[{"type":"POST","argument":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForNameBatch"}],"name":"ts-order-other-service --> ts-station-service"},{"source":"ts-preserve-other-service","target":"ts-security-service","requests":[{"type":"GET","argument":"@PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"security.controller.SecurityController.check"}],"name":"ts-preserve-other-service --> ts-security-service"},{"source":"ts-admin-travel-service","target":"ts-travel-service","requests":[{"type":"PUT","argument":"@RequestBody TravelInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.updateTrip"},{"type":"POST","argument":"@RequestBody TravelInfo routeIds, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"travel.controller.TravelController.createTrip"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.adminQueryAll"},{"type":"DELETE","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.deleteTrip"}],"name":"ts-admin-travel-service --> ts-travel-service"},{"source":"ts-preserve-service","target":"ts-user-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @RequestHeader HttpHeaders headers","msReturn":"ResponseEntity<Response>","endpointFunction":"user.controller.UserController.getUserByUserId"}],"name":"ts-preserve-service --> ts-user-service"},{"source":"ts-seat-service","target":"ts-order-service","requests":[{"type":"GET","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.getTicketListByDateAndTripId"}],"name":"ts-seat-service --> ts-order-service"},{"source":"ts-admin-basic-info-service","target":"ts-price-service","requests":[{"type":"POST","argument":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"price.controller.PriceController.create"},{"type":"PUT","argument":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.update"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.queryAll"},{"type":"DELETE","argument":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"price.controller.PriceController.delete"}],"name":"ts-admin-basic-info-service --> ts-price-service"},{"source":"ts-preserve-other-service","target":"ts-food-service","requests":[{"type":"POST","argument":"@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"foodsearch.controller.FoodController.createFoodOrder"}],"name":"ts-preserve-other-service --> ts-food-service"},{"source":"ts-rebook-service","target":"ts-seat-service","requests":[{"type":"POST","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.create"}],"name":"ts-rebook-service --> ts-seat-service"},{"source":"ts-inside-payment-service","target":"ts-order-other-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.modifyOrder"}],"name":"ts-inside-payment-service --> ts-order-other-service"},{"source":"ts-consign-service","target":"ts-consign-price-service","requests":[{"type":"GET","argument":"@PathVariable String weight, @PathVariable String isWithinRegion, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"consignprice.controller.ConsignPriceController.getPriceByWeightAndRegion"}],"name":"ts-consign-service --> ts-consign-price-service"},{"source":"ts-basic-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-basic-service --> ts-station-service"},{"source":"ts-rebook-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationIdForName#quot;) String stationId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryById"}],"name":"ts-rebook-service --> ts-station-service"},{"source":"ts-travel-plan-service","target":"ts-travel2-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.queryInfo"}],"name":"ts-travel-plan-service --> ts-travel2-service"},{"source":"ts-preserve-other-service","target":"ts-travel2-service","requests":[{"type":"POST","argument":"@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.getTripAllDetailInfo"}],"name":"ts-preserve-other-service --> ts-travel2-service"},{"source":"ts-cancel-service","target":"ts-order-service","requests":[{"type":"PUT","argument":"@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.saveOrderInfo"},{"type":"GET","argument":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.getOrderById"}],"name":"ts-cancel-service --> ts-order-service"},{"source":"ts-food-service","target":"ts-station-service","requests":[{"type":"GET","argument":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"fdse.microservice.controller.StationController.queryForStationId"}],"name":"ts-food-service --> ts-station-service"},{"source":"ts-security-service","target":"ts-order-service","requests":[{"type":"GET","argument":"@PathVariable Date checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"order.controller.OrderController.securityInfoCheck"}],"name":"ts-security-service --> ts-order-service"},{"source":"ts-execute-service","target":"ts-order-other-service","requests":[{"type":"PUT","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.modifyOrder"},{"type":"GET","argument":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.getOrderById"}],"name":"ts-execute-service --> ts-order-other-service"},{"source":"ts-preserve-other-service","target":"ts-contacts-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.getContactsByContactsId"}],"name":"ts-preserve-other-service --> ts-contacts-service"},{"source":"ts-preserve-other-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"}],"name":"ts-preserve-other-service --> ts-ticketinfo-service"},{"source":"ts-preserve-service","target":"ts-food-service","requests":[{"type":"POST","argument":"@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"foodsearch.controller.FoodController.createFoodOrder"}],"name":"ts-preserve-service --> ts-food-service"},{"source":"ts-cancel-service","target":"ts-inside-payment-service","requests":[{"type":"GET","argument":"@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"inside_payment.controller.InsidePaymentController.drawBack"}],"name":"ts-cancel-service --> ts-inside-payment-service"},{"source":"ts-admin-basic-info-service","target":"ts-train-service","requests":[{"type":"POST","argument":"@RequestBody TrainType trainType, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.create"},{"type":"PUT","argument":"@RequestBody TrainType trainType, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.update"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.query"},{"type":"DELETE","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.delete"}],"name":"ts-admin-basic-info-service --> ts-train-service"},{"source":"ts-route-plan-service","target":"ts-route-service","requests":[{"type":"POST","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"},{"type":"GET","argument":"@PathVariable String startId, @PathVariable String terminalId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryByStartAndTerminal"}],"name":"ts-route-plan-service --> ts-route-service"},{"source":"ts-seat-service","target":"ts-travel-service","requests":[{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getRouteByTripId"},{"type":"GET","argument":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel.controller.TravelController.getTrainTypeByTripId"}],"name":"ts-seat-service --> ts-travel-service"},{"source":"ts-seat-service","target":"ts-order-other-service","requests":[{"type":"GET","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"other.controller.OrderOtherController.getTicketListByDateAndTripId"}],"name":"ts-seat-service --> ts-order-other-service"},{"source":"ts-route-plan-service","target":"ts-travel2-service","requests":[{"type":"POST","argument":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.queryInfo"},{"type":"GET","argument":"@RequestBody ArrayList<String> routeIds, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"travel2.controller.Travel2Controller.getTripsByRouteId"}],"name":"ts-route-plan-service --> ts-travel2-service"},{"source":"ts-travel-service","target":"ts-route-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"}],"name":"ts-travel-service --> ts-route-service"},{"source":"ts-rebook-service","target":"ts-inside-payment-service","requests":[{"type":"POST","argument":"@RequestBody PaymentInfo info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"inside_payment.controller.InsidePaymentController.payDifference"},{"type":"GET","argument":"@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"inside_payment.controller.InsidePaymentController.drawBack"}],"name":"ts-rebook-service --> ts-inside-payment-service"},{"source":"ts-travel2-service","target":"ts-train-service","requests":[{"type":"GET","argument":"@PathVariable String id, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"train.controller.TrainController.retrieve"}],"name":"ts-travel2-service --> ts-train-service"},{"source":"ts-travel-plan-service","target":"ts-seat-service","requests":[{"type":"GET","argument":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"seat.controller.SeatController.getLeftTicketOfInterval"}],"name":"ts-travel-plan-service --> ts-seat-service"},{"source":"ts-admin-basic-info-service","target":"ts-config-service","requests":[{"type":"POST","argument":"@RequestBody Config info, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"config.controller.ConfigController.createConfig"},{"type":"PUT","argument":"@RequestBody Config info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.updateConfig"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.queryAll"},{"type":"DELETE","argument":"@PathVariable String configName, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"config.controller.ConfigController.deleteConfig"}],"name":"ts-admin-basic-info-service --> ts-config-service"},{"source":"ts-travel2-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"},{"type":"GET","argument":"@PathVariable String name, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForStationId"}],"name":"ts-travel2-service --> ts-ticketinfo-service"},{"source":"ts-admin-basic-info-service","target":"ts-contacts-service","requests":[{"type":"POST","argument":"@RequestBody Contacts aci, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity<?>","endpointFunction":"contacts.controller.ContactsController.createNewContactsAdmin"},{"type":"PUT","argument":"@RequestBody Contacts info, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.modifyContacts"},{"type":"GET","argument":"@RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.getAllContacts"},{"type":"DELETE","argument":"@PathVariable String contactsId, @RequestHeader HttpHeaders headers","msReturn":"HttpEntity","endpointFunction":"contacts.controller.ContactsController.deleteContacts"}],"name":"ts-admin-basic-info-service --> ts-contacts-service"},{"source":"ts-travel2-service","target":"ts-route-service","requests":[{"type":"GET","argument":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"route.controller.RouteController.queryById"}],"name":"ts-travel2-service --> ts-route-service"},{"source":"ts-preserve-service","target":"ts-ticketinfo-service","requests":[{"type":"POST","argument":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"ticketinfo.controller.TicketInfoController.queryForTravel"}],"name":"ts-preserve-service --> ts-ticketinfo-service"},{"source":"ts-inside-payment-service","target":"ts-payment-service","requests":[{"type":"POST","argument":"@RequestBody Payment info, @RequestHeader HttpHeaders headers","msReturn":"org.springframework.http.HttpEntity","endpointFunction":"com.trainticket.controller.PaymentController.pay"}],"name":"ts-inside-payment-service --> ts-payment-service"},{"source":"ts-preserve-other-service","target":"ts-notification-service","requests":[{"type":"POST","argument":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","msReturn":"boolean","endpointFunction":"notification.controller.NotificationController.preserve_success"}],"name":"ts-preserve-other-service --> ts-notification-service"}]', '2023-05-02 03:26:36.304000', '[{"nodeName":"ts-auth-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"D","latency":36.0,"cpu":50.0,"ram":80.0,"disk":35.0,"x":-207.92198286060642,"y":40.22562827202182,"z":419.2313175775127},{"nodeName":"ts-execute-service","nodeType":"service","patterns":[],"contributor":"B","latency":83.0,"cpu":20.0,"ram":65.0,"disk":80.0,"x":154.15966791197854,"y":-171.6084504312158,"z":137.97295796274773},{"nodeName":"ts-assurance-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"C","latency":14.0,"cpu":60.0,"ram":85.0,"disk":50.0,"x":-82.76746727859226,"y":169.83555052064506,"z":93.91357544556425},{"nodeName":"ts-travel2-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":5},{"type":"Cyclic Dependency","problemNodes":["ts-basic-service","ts-ticketinfo-service","ts-travel2-service","ts-travel-service","ts-seat-service","ts-admin-route-service","ts-route-service","ts-route-plan-service"],"id":0}],"contributor":"D","latency":47.0,"cpu":50.0,"ram":70.0,"disk":35.0,"x":188.41642401532914,"y":78.48027197008847,"z":-114.59204433542543},{"nodeName":"ts-travel-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":6},{"type":"Cyclic Dependency","problemNodes":["ts-basic-service","ts-ticketinfo-service","ts-travel2-service","ts-travel-service","ts-seat-service","ts-admin-route-service","ts-route-service","ts-route-plan-service"],"id":0}],"contributor":"B","latency":10.0,"cpu":100.0,"ram":15.0,"disk":35.0,"x":140.24708938989684,"y":11.845795991156232,"z":-137.5813725979954},{"nodeName":"ts-travel-plan-service","nodeType":"service","patterns":[],"contributor":"C","latency":54.0,"cpu":90.0,"ram":90.0,"disk":5.0,"x":141.9151215392023,"y":-75.71551334438729,"z":-178.32751608272906},{"nodeName":"ts-route-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":5},{"type":"Cyclic Dependency","problemNodes":["ts-basic-service","ts-ticketinfo-service","ts-travel2-service","ts-travel-service","ts-seat-service","ts-admin-route-service","ts-route-service","ts-route-plan-service"],"id":0}],"contributor":"C","latency":86.0,"cpu":30.0,"ram":40.0,"disk":20.0,"x":200.51914845668557,"y":86.09911164879115,"z":-318.3436347741585},{"nodeName":"ts-admin-user-service","nodeType":"service","patterns":[],"contributor":"A","latency":10.0,"cpu":100.0,"ram":5.0,"disk":50.0,"x":-180.5418882689668,"y":82.00930141159628,"z":346.98139625555376},{"nodeName":"ts-order-other-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":8}],"contributor":"A","latency":74.0,"cpu":20.0,"ram":55.0,"disk":65.0,"x":106.95129798625977,"y":-76.16823046333718,"z":107.33268214025905},{"nodeName":"ts-rebook-service","nodeType":"service","patterns":[],"contributor":"C","latency":39.0,"cpu":60.0,"ram":35.0,"disk":65.0,"x":36.89816464157088,"y":-199.42430814219935,"z":-34.091671466299026},{"nodeName":"ts-station-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":10}],"contributor":"B","latency":25.0,"cpu":40.0,"ram":35.0,"disk":5.0,"x":-12.117190645946526,"y":-87.8832134117645,"z":-126.89019893702276},{"nodeName":"ts-user-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":4}],"contributor":"B","latency":17.0,"cpu":90.0,"ram":10.0,"disk":65.0,"x":-125.85973061821107,"y":44.803752528832156,"z":263.81172512400974},{"nodeName":"ts-consign-price-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"A","latency":38.0,"cpu":90.0,"ram":20.0,"disk":65.0,"x":-278.25010025549597,"y":193.91650441788713,"z":138.96073458934055},{"nodeName":"ts-price-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"E","latency":76.0,"cpu":60.0,"ram":25.0,"disk":20.0,"x":-123.41150755293663,"y":111.4765774036634,"z":-354.49658046570454},{"nodeName":"ts-security-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"A","latency":37.0,"cpu":30.0,"ram":70.0,"disk":20.0,"x":38.03860013540581,"y":6.584358944399516,"z":149.49548702456846},{"nodeName":"ts-verification-code-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"E","latency":75.0,"cpu":80.0,"ram":25.0,"disk":50.0,"x":-262.18097132314796,"y":43.64825973071825,"z":521.6570717691293},{"nodeName":"ts-order-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":8}],"contributor":"E","latency":52.0,"cpu":10.0,"ram":50.0,"disk":35.0,"x":37.27723641993632,"y":-142.34769921346046,"z":77.71632263232043},{"nodeName":"ts-notification-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":3}],"contributor":"B","latency":51.0,"cpu":30.0,"ram":60.0,"disk":50.0,"x":-64.39933838321348,"y":29.769608999085097,"z":179.02664432866152},{"nodeName":"ts-admin-route-service","nodeType":"service","patterns":[{"type":"Cyclic Dependency","problemNodes":["ts-basic-service","ts-ticketinfo-service","ts-travel2-service","ts-travel-service","ts-seat-service","ts-admin-route-service","ts-route-service","ts-route-plan-service"],"id":0},{"type":"Bottleneck","threshold":1}],"contributor":"C","latency":85.0,"cpu":10.0,"ram":60.0,"disk":5.0,"x":244.6604083847151,"y":28.06496136582769,"z":-404.8746209616397},{"nodeName":"ts-contacts-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":3}],"contributor":"A","latency":14.0,"cpu":40.0,"ram":45.0,"disk":80.0,"x":-124.52637945046416,"y":122.35276923256909,"z":-56.074063984235416},{"nodeName":"ts-admin-basic-info-service","nodeType":"service","patterns":[],"contributor":"E","latency":46.0,"cpu":90.0,"ram":100.0,"disk":20.0,"x":-111.6754959234394,"y":50.74288575922341,"z":-239.93912554841785},{"nodeName":"ts-preserve-other-service","nodeType":"service","patterns":[],"contributor":"E","latency":39.0,"cpu":60.0,"ram":75.0,"disk":80.0,"x":-1.4285447899350765,"y":106.9013953606598,"z":63.54061000291893},{"nodeName":"ts-payment-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"B","latency":19.0,"cpu":50.0,"ram":40.0,"disk":35.0,"x":-20.982659032728723,"y":-361.5055832887082,"z":174.77074990001816},{"nodeName":"ts-admin-order-service","nodeType":"service","patterns":[],"contributor":"D","latency":18.0,"cpu":70.0,"ram":30.0,"disk":50.0,"x":93.1374508916774,"y":-176.8688043856477,"z":177.942406307583},{"nodeName":"ts-food-map-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":1}],"contributor":"E","latency":58.0,"cpu":40.0,"ram":75.0,"disk":65.0,"x":-175.81072195925904,"y":-6.402594829691387,"z":-85.270105948181},{"nodeName":"ts-cancel-service","nodeType":"service","patterns":[],"contributor":"D","latency":34.0,"cpu":20.0,"ram":45.0,"disk":80.0,"x":-32.07611122924315,"y":-119.44519066825579,"z":229.09488478085433},{"nodeName":"ts-admin-travel-service","nodeType":"service","patterns":[],"contributor":"A","latency":94.0,"cpu":70.0,"ram":80.0,"disk":20.0,"x":276.93873403658756,"y":49.04949245488032,"z":-141.4777347349971},{"nodeName":"ts-preserve-service","nodeType":"service","patterns":[],"contributor":"A","latency":36.0,"cpu":80.0,"ram":95.0,"disk":65.0,"x":-72.69859101576752,"y":37.26920368996394,"z":52.395441087644485},{"nodeName":"ts-food-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"B","latency":83.0,"cpu":70.0,"ram":90.0,"disk":35.0,"x":-58.96814658374028,"y":17.784270260228364,"z":-60.151319071734974},{"nodeName":"ts-basic-service","nodeType":"service","patterns":[{"type":"Cyclic Dependency","problemNodes":["ts-basic-service","ts-ticketinfo-service","ts-travel2-service","ts-travel-service","ts-seat-service","ts-admin-route-service","ts-route-service","ts-route-plan-service"],"id":0},{"type":"Bottleneck","threshold":1}],"contributor":"C","latency":87.0,"cpu":80.0,"ram":15.0,"disk":35.0,"x":1.1827738567818096,"y":89.93522483410698,"z":-304.76370651080805},{"nodeName":"ts-ticketinfo-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":5},{"type":"Cyclic Dependency","problemNodes":["ts-basic-service","ts-ticketinfo-service","ts-travel2-service","ts-travel-service","ts-seat-service","ts-admin-route-service","ts-route-service","ts-route-plan-service"],"id":0}],"contributor":"D","latency":18.0,"cpu":70.0,"ram":20.0,"disk":80.0,"x":61.687266347827666,"y":125.77799857240859,"z":-102.08320324964062},{"nodeName":"ts-inside-payment-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"C","latency":14.0,"cpu":40.0,"ram":65.0,"disk":65.0,"x":7.307545507440967,"y":-259.5894684852442,"z":132.76742868811888},{"nodeName":"ts-train-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":4}],"contributor":"A","latency":67.0,"cpu":50.0,"ram":30.0,"disk":95.0,"x":80.22027214088412,"y":99.8764235924624,"z":-245.58957184979215},{"nodeName":"ts-config-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"E","latency":53.0,"cpu":30.0,"ram":50.0,"disk":20.0,"x":3.610640212256035,"y":-14.261650946555344,"z":-160.85829413923415},{"nodeName":"ts-consign-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":2}],"contributor":"D","latency":53.0,"cpu":20.0,"ram":55.0,"disk":95.0,"x":-167.13366961462458,"y":146.4328906928305,"z":106.14174180037465},{"nodeName":"ts-seat-service","nodeType":"service","patterns":[{"type":"Bottleneck","threshold":6},{"type":"Cyclic Dependency","problemNodes":["ts-basic-service","ts-ticketinfo-service","ts-travel2-service","ts-travel-service","ts-seat-service","ts-admin-route-service","ts-route-service","ts-route-plan-service"],"id":0}],"contributor":"D","latency":24.0,"cpu":100.0,"ram":95.0,"disk":80.0,"x":125.39204456758817,"y":-48.929930823738346,"z":-32.093647380548894},{"nodeName":"ts-route-plan-service","nodeType":"service","patterns":[{"type":"Cyclic Dependency","problemNodes":["ts-basic-service","ts-ticketinfo-service","ts-travel2-service","ts-travel-service","ts-seat-service","ts-admin-route-service","ts-route-service","ts-route-plan-service"],"id":0},{"type":"Bottleneck","threshold":2}],"contributor":"B","latency":15.0,"cpu":80.0,"ram":85.0,"disk":95.0,"x":182.25024797466247,"y":-36.26850618263176,"z":-281.13136639911545}]');
